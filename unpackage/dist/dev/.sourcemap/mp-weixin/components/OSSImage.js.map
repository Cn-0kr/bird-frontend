{"version":3,"file":"OSSImage.js","sources":["components/OSSImage.vue","../../../HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovc2l0cOmhueebri9taW5pcHJvZ3JhbS9iaXJkLWZyb250ZW5kL2NvbXBvbmVudHMvT1NTSW1hZ2UudnVl"],"sourcesContent":["<!--\n  OSS图片组件\n  提供自动优化、懒加载、错误处理等功能的图片组件\n  @author Frontend Developer\n  @date 2025-07-03\n-->\n\n<template>\n  <div \n    class=\"oss-image-container\"\n    :class=\"containerClasses\"\n    :style=\"containerStyles\"\n  >\n    <!-- 加载占位符 -->\n    <div \n      v-if=\"isLoading && showPlaceholder\" \n      class=\"oss-image-placeholder\"\n      :style=\"placeholderStyles\"\n    >\n      <div class=\"oss-image-placeholder-content\">\n        <div class=\"oss-image-loading-spinner\" v-if=\"!customPlaceholder\">\n          <svg class=\"animate-spin\" viewBox=\"0 0 24 24\">\n            <circle \n              cx=\"12\" \n              cy=\"12\" \n              r=\"10\" \n              stroke=\"currentColor\" \n              stroke-width=\"2\" \n              fill=\"none\" \n              stroke-dasharray=\"32\" \n              stroke-dashoffset=\"32\"\n            >\n              <animate \n                attributeName=\"stroke-dasharray\" \n                dur=\"2s\" \n                values=\"0 32;16 16;0 32;0 32\" \n                repeatCount=\"indefinite\"\n              />\n              <animate \n                attributeName=\"stroke-dashoffset\" \n                dur=\"2s\" \n                values=\"0;-16;-32;-32\" \n                repeatCount=\"indefinite\"\n              />\n            </circle>\n          </svg>\n        </div>\n        <slot name=\"placeholder\" v-else />\n      </div>\n    </div>\n\n    <!-- 错误占位符 -->\n    <div \n      v-if=\"hasError && showErrorPlaceholder\" \n      class=\"oss-image-error\"\n      :style=\"errorStyles\"\n      @click=\"handleRetry\"\n    >\n      <div class=\"oss-image-error-content\">\n        <div class=\"oss-image-error-icon\" v-if=\"!customErrorPlaceholder\">\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n            <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"/>\n            <path d=\"M12 9v4\"/>\n            <circle cx=\"12\" cy=\"17\" r=\"1\"/>\n          </svg>\n          <p class=\"oss-image-error-text\">图片加载失败</p>\n          <button class=\"oss-image-retry-btn\" v-if=\"enableRetry\">\n            点击重试\n          </button>\n        </div>\n        <slot name=\"error\" v-else />\n      </div>\n    </div>\n\n    <!-- 主图片 -->\n    <picture v-if=\"!hasError\" class=\"oss-image-picture\">\n      <!-- WebP源 -->\n      <source\n        v-if=\"enableWebP && webpSrcSet\"\n        :srcset=\"webpSrcSet\"\n        :sizes=\"sizes\"\n        type=\"image/webp\"\n      />\n      \n      <!-- 回退源 -->\n      <img\n        ref=\"imageRef\"\n        :src=\"currentSrc\"\n        :srcset=\"srcSet\"\n        :sizes=\"sizes\"\n        :alt=\"alt\"\n        :loading=\"nativeLazyLoad ? 'lazy' : 'eager'\"\n        :class=\"imageClasses\"\n        :style=\"imageStyles\"\n        @load=\"handleLoad\"\n        @error=\"handleError\"\n        @click=\"handleClick\"\n      />\n    </picture>\n\n    <!-- 图片遮罩效果 -->\n    <div \n      v-if=\"overlay\" \n      class=\"oss-image-overlay\"\n      :class=\"overlayClasses\"\n      :style=\"overlayStyles\"\n    >\n      <slot name=\"overlay\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onUnmounted, watch, nextTick } from 'vue'\nimport { getImageUrl, generateSrcSet, preloadImages } from '@/utils/oss.js'\n\nexport default {\n  name: 'OSSImage',\n  \n  props: {\n    // 图片源文件名（OSS中的路径）\n    src: {\n      type: String,\n      required: true\n    },\n    \n    // 图片alt属性\n    alt: {\n      type: String,\n      default: ''\n    },\n    \n    // 图片尺寸预设 (thumbnail|small|medium|large|banner)\n    size: {\n      type: String,\n      default: 'medium'\n    },\n    \n    // 自定义宽度\n    width: {\n      type: [Number, String],\n      default: null\n    },\n    \n    // 自定义高度\n    height: {\n      type: [Number, String],\n      default: null\n    },\n    \n    // 图片质量 (1-100)\n    quality: {\n      type: Number,\n      default: 80,\n      validator: (value) => value >= 1 && value <= 100\n    },\n    \n    // 图片格式\n    format: {\n      type: String,\n      default: 'webp',\n      validator: (value) => ['jpg', 'png', 'webp', 'gif', 'original'].includes(value)\n    },\n    \n    // 是否启用懒加载\n    lazy: {\n      type: Boolean,\n      default: true\n    },\n    \n    // 是否使用原生懒加载\n    nativeLazyLoad: {\n      type: Boolean,\n      default: true\n    },\n    \n    // 响应式图片尺寸\n    responsive: {\n      type: [Boolean, Array],\n      default: false\n    },\n    \n    // sizes属性\n    sizes: {\n      type: String,\n      default: '100vw'\n    },\n    \n    // 是否启用WebP格式\n    enableWebP: {\n      type: Boolean,\n      default: true\n    },\n    \n    // 是否显示加载占位符\n    showPlaceholder: {\n      type: Boolean,\n      default: true\n    },\n    \n    // 是否显示错误占位符\n    showErrorPlaceholder: {\n      type: Boolean,\n      default: true\n    },\n    \n    // 是否启用重试功能\n    enableRetry: {\n      type: Boolean,\n      default: true\n    },\n    \n    // 最大重试次数\n    maxRetries: {\n      type: Number,\n      default: 3\n    },\n    \n    // 是否预加载\n    preload: {\n      type: Boolean,\n      default: false\n    },\n    \n    // 圆角样式\n    rounded: {\n      type: [Boolean, String],\n      default: false\n    },\n    \n    // 阴影效果\n    shadow: {\n      type: [Boolean, String],\n      default: false\n    },\n    \n    // 悬停效果\n    hover: {\n      type: [Boolean, String],\n      default: false\n    },\n    \n    // 是否启用遮罩\n    overlay: {\n      type: Boolean,\n      default: false\n    },\n    \n    // 容器CSS类\n    containerClass: {\n      type: [String, Array, Object],\n      default: ''\n    },\n    \n    // 图片CSS类\n    imageClass: {\n      type: [String, Array, Object],\n      default: ''\n    },\n    \n    // 自定义样式\n    customStyles: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  \n  emits: ['load', 'error', 'click', 'retry'],\n  \n  setup(props, { emit, slots }) {\n    // 响应式数据\n    const imageRef = ref(null)\n    const isLoading = ref(true)\n    const hasError = ref(false)\n    const retryCount = ref(0)\n    const intersectionObserver = ref(null)\n    const isIntersecting = ref(false)\n    \n    // 计算属性\n    const currentSrc = computed(() => {\n      if (hasError.value) return ''\n      \n      // 如果启用懒加载且图片不在视窗内，返回空字符串\n      if (props.lazy && !props.nativeLazyLoad && !isIntersecting.value) {\n        return ''\n      }\n      \n      return getImageUrl(props.src, {\n        size: props.size,\n        width: props.width,\n        height: props.height,\n        quality: props.quality,\n        format: props.format\n      })\n    })\n    \n    const srcSet = computed(() => {\n      if (hasError.value || !props.responsive) return ''\n      \n      const sizes = Array.isArray(props.responsive) \n        ? props.responsive \n        : ['small', 'medium', 'large']\n      \n      return generateSrcSet(props.src, \n        sizes.reduce((acc, size) => {\n          acc[size] = `${size === 'small' ? 480 : size === 'medium' ? 768 : 1200}w`\n          return acc\n        }, {}),\n        {\n          quality: props.quality,\n          format: props.format === 'webp' ? 'jpg' : props.format // srcSet回退格式\n        }\n      )\n    })\n    \n    const webpSrcSet = computed(() => {\n      if (hasError.value || !props.responsive || !props.enableWebP) return ''\n      \n      const sizes = Array.isArray(props.responsive) \n        ? props.responsive \n        : ['small', 'medium', 'large']\n      \n      return generateSrcSet(props.src, \n        sizes.reduce((acc, size) => {\n          acc[size] = `${size === 'small' ? 480 : size === 'medium' ? 768 : 1200}w`\n          return acc\n        }, {}),\n        {\n          quality: props.quality,\n          format: 'webp'\n        }\n      )\n    })\n    \n    // 样式计算\n    const containerClasses = computed(() => [\n      'oss-image-container',\n      {\n        'oss-image-loading': isLoading.value,\n        'oss-image-error-state': hasError.value,\n        'oss-image-rounded': props.rounded,\n        'oss-image-shadow': props.shadow,\n        'oss-image-hover': props.hover\n      },\n      props.containerClass\n    ])\n    \n    const imageClasses = computed(() => [\n      'oss-image',\n      {\n        'oss-image-loaded': !isLoading.value && !hasError.value,\n        [`oss-image-rounded-${props.rounded}`]: typeof props.rounded === 'string',\n        [`oss-image-shadow-${props.shadow}`]: typeof props.shadow === 'string',\n        [`oss-image-hover-${props.hover}`]: typeof props.hover === 'string'\n      },\n      props.imageClass\n    ])\n    \n    const containerStyles = computed(() => ({\n      width: props.width ? `${props.width}px` : undefined,\n      height: props.height ? `${props.height}px` : undefined,\n      ...props.customStyles\n    }))\n    \n    const imageStyles = computed(() => ({\n      objectFit: props.width && props.height ? 'cover' : 'contain'\n    }))\n    \n    const placeholderStyles = computed(() => ({\n      backgroundColor: '#f3f4f6',\n      color: '#9ca3af'\n    }))\n    \n    const errorStyles = computed(() => ({\n      backgroundColor: '#fee2e2',\n      color: '#dc2626'\n    }))\n    \n    const overlayClasses = computed(() => [\n      'oss-image-overlay',\n      {\n        'oss-image-overlay-visible': !isLoading.value && !hasError.value\n      }\n    ])\n    \n    const overlayStyles = computed(() => ({}))\n    \n    // 检查是否有自定义插槽\n    const customPlaceholder = computed(() => !!slots.placeholder)\n    const customErrorPlaceholder = computed(() => !!slots.error)\n    \n    // 方法\n    const handleLoad = () => {\n      isLoading.value = false\n      hasError.value = false\n      emit('load', imageRef.value)\n    }\n    \n    const handleError = (event) => {\n      isLoading.value = false\n      hasError.value = true\n      emit('error', event)\n    }\n    \n    const handleClick = (event) => {\n      emit('click', event)\n    }\n    \n    const handleRetry = () => {\n      if (retryCount.value < props.maxRetries) {\n        retryCount.value++\n        hasError.value = false\n        isLoading.value = true\n        \n        // 强制重新加载图片\n        nextTick(() => {\n          if (imageRef.value) {\n            imageRef.value.src = currentSrc.value\n          }\n        })\n        \n        emit('retry', retryCount.value)\n      }\n    }\n    \n    // 初始化交叉观察器（用于懒加载）\n    const initIntersectionObserver = () => {\n      if (!props.lazy || props.nativeLazyLoad || typeof window === 'undefined') return\n      \n      intersectionObserver.value = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n              isIntersecting.value = true\n              intersectionObserver.value?.disconnect()\n            }\n          })\n        },\n        {\n          rootMargin: '50px' // 提前50px开始加载\n        }\n      )\n    }\n    \n    // 生命周期\n    onMounted(() => {\n      initIntersectionObserver()\n      \n      if (intersectionObserver.value && imageRef.value?.parentElement) {\n        intersectionObserver.value.observe(imageRef.value.parentElement)\n      }\n      \n      // 如果启用预加载\n      if (props.preload) {\n        preloadImages([currentSrc.value])\n      }\n    })\n    \n    onUnmounted(() => {\n      intersectionObserver.value?.disconnect()\n    })\n    \n    // 监听src变化\n    watch(() => props.src, () => {\n      isLoading.value = true\n      hasError.value = false\n      retryCount.value = 0\n    })\n    \n    return {\n      // refs\n      imageRef,\n      \n      // reactive data\n      isLoading,\n      hasError,\n      \n      // computed\n      currentSrc,\n      srcSet,\n      webpSrcSet,\n      containerClasses,\n      imageClasses,\n      containerStyles,\n      imageStyles,\n      placeholderStyles,\n      errorStyles,\n      overlayClasses,\n      overlayStyles,\n      customPlaceholder,\n      customErrorPlaceholder,\n      \n      // methods\n      handleLoad,\n      handleError,\n      handleClick,\n      handleRetry\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* OSS图片容器样式 */\n.oss-image-container {\n  position: relative;\n  display: inline-block;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* 图片样式 */\n.oss-image {\n  width: 100%;\n  height: 100%;\n  display: block;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n  transform: scale(1.05);\n}\n\n.oss-image-loaded {\n  opacity: 1;\n  transform: scale(1);\n}\n\n/* 占位符样式 */\n.oss-image-placeholder,\n.oss-image-error {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: opacity 0.3s ease;\n}\n\n.oss-image-placeholder-content,\n.oss-image-error-content {\n  text-align: center;\n  padding: 1rem;\n}\n\n/* 加载动画 */\n.oss-image-loading-spinner {\n  width: 2rem;\n  height: 2rem;\n  margin: 0 auto 0.5rem;\n  color: #6b7280;\n}\n\n.animate-spin {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* 错误状态样式 */\n.oss-image-error-icon svg {\n  width: 2rem;\n  height: 2rem;\n  margin: 0 auto 0.5rem;\n}\n\n.oss-image-error-text {\n  font-size: 0.875rem;\n  margin: 0.5rem 0;\n}\n\n.oss-image-retry-btn {\n  background: #dc2626;\n  color: white;\n  border: none;\n  padding: 0.375rem 0.75rem;\n  border-radius: 0.375rem;\n  font-size: 0.75rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.oss-image-retry-btn:hover {\n  background: #b91c1c;\n}\n\n/* 圆角样式 */\n.oss-image-rounded {\n  border-radius: 0.5rem;\n}\n\n.oss-image-rounded-sm { border-radius: 0.25rem; }\n.oss-image-rounded-md { border-radius: 0.375rem; }\n.oss-image-rounded-lg { border-radius: 0.5rem; }\n.oss-image-rounded-xl { border-radius: 0.75rem; }\n.oss-image-rounded-full { border-radius: 9999px; }\n\n/* 阴影样式 */\n.oss-image-shadow {\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n}\n\n.oss-image-shadow-sm { box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); }\n.oss-image-shadow-md { box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); }\n.oss-image-shadow-lg { box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }\n.oss-image-shadow-xl { box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04); }\n\n/* 悬停效果 */\n.oss-image-hover:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n}\n\n.oss-image-hover-scale:hover .oss-image {\n  transform: scale(1.05);\n}\n\n.oss-image-hover-zoom:hover {\n  overflow: hidden;\n}\n\n.oss-image-hover-zoom:hover .oss-image {\n  transform: scale(1.1);\n}\n\n/* 遮罩层 */\n.oss-image-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.4);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.oss-image-overlay-visible:hover {\n  opacity: 1;\n}\n\n/* 响应式设计 */\n@media (max-width: 640px) {\n  .oss-image-container {\n    width: 100%;\n  }\n}\n</style>","import Component from 'D:/sitp项目/miniprogram/bird-frontend/components/OSSImage.vue'\nwx.createComponent(Component)"],"names":["ref","computed","getImageUrl","generateSrcSet","nextTick","onMounted","preloadImages","onUnmounted","watch"],"mappings":"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"}