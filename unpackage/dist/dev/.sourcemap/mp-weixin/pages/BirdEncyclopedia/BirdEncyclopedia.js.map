{"version":3,"file":"BirdEncyclopedia.js","sources":["pages/BirdEncyclopedia/BirdEncyclopedia.vue","../../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvQmlyZEVuY3ljbG9wZWRpYS9CaXJkRW5jeWNsb3BlZGlhLnZ1ZQ"],"sourcesContent":["<template>\r\n    <view class=\"encyclopedia-container\">\r\n      <!-- 自定义导航栏 -->\r\n      <view class=\"custom-navbar\">\r\n        <view class=\"navbar-left\" @click=\"goBack\">\r\n          <image src=\"/static/icons/back.png\" class=\"back-icon\"></image>\r\n        </view>\r\n        <text class=\"navbar-title\">鸟类图鉴</text>\r\n        <view class=\"navbar-right\">\r\n          <view \r\n            class=\"mode-switch\" \r\n            @click=\"toggleMode\"\r\n            :class=\"{ 'mode-switch-active': currentMode === 'general' }\"\r\n          >\r\n            <image \r\n              :src=\"currentMode === 'search' ? '/static/icons/book.png' : '/static/icons/search.png'\" \r\n              class=\"mode-icon\"\r\n            ></image>\r\n          </view>\r\n        </view>\r\n      </view>\r\n  \r\n      <!-- 搜索模式 -->\r\n      <view v-if=\"currentMode === 'search'\" class=\"search-mode\">\r\n        <!-- 搜索栏 -->\r\n        <view class=\"search-section\">\r\n          <view class=\"search-input-wrapper\">\r\n            <image src=\"/static/icons/search.png\" class=\"search-icon\"></image>\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"搜索鸟类名称或特征...\"\r\n              v-model=\"searchKeyword\"\r\n              @input=\"onSearchInput\"\r\n              @confirm=\"handleSearchConfirm\"\r\n              class=\"search-input\"\r\n              confirm-type=\"search\"\r\n            />\r\n            <view \r\n              v-if=\"searchKeyword\" \r\n              class=\"clear-btn\" \r\n              @click=\"clearSearch\"\r\n            >\r\n              <image src=\"/static/icons/close.png\" class=\"clear-icon\"></image>\r\n            </view>\r\n          </view>\r\n        </view>\r\n  \r\n        <!-- 搜索结果 -->\r\n        <view class=\"search-results\">\r\n          <view v-if=\"isSearching\" class=\"loading-container\">\r\n            <view class=\"loading-spinner\"></view>\r\n            <text class=\"loading-text\">搜索中...</text>\r\n          </view>\r\n  \r\n          <view v-else-if=\"searchResults.length > 0\" class=\"results-grid\">\r\n            <view \r\n              v-for=\"(bird, index) in searchResults\" \r\n              :key=\"bird.id\"\r\n              class=\"result-card\"\r\n              @click=\"selectBird(bird)\"\r\n              :style=\"{ 'animation-delay': `${index * 0.1}s` }\"\r\n            >\r\n              <image :src=\"bird.imageUrl\" class=\"result-image\" mode=\"aspectFill\"></image>\r\n              <view class=\"result-content\">\r\n                <text class=\"result-name\">{{ bird.name }}</text>\r\n                <text class=\"result-scientific\">{{ bird.scientificName }}</text>\r\n                <view class=\"result-tags\">\r\n                  <text v-for=\"tag in bird.tags\" :key=\"tag\" class=\"result-tag\">{{ tag }}</text>\r\n                </view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n  \r\n          <view v-else-if=\"searchKeyword && !isSearching\" class=\"no-results\">\r\n            <image src=\"/static/icons/no-search-results.png\" class=\"no-results-icon\"></image>\r\n            <text class=\"no-results-text\">未找到相关鸟类</text>\r\n            <text class=\"no-results-subtitle\">尝试搜索其他关键词</text>\r\n          </view>\r\n  \r\n          <view v-else class=\"search-placeholder\">\r\n            <image src=\"/static/icons/search-placeholder.png\" class=\"placeholder-icon\"></image>\r\n            <text class=\"placeholder-text\">输入鸟类名称开始搜索</text>\r\n            <text class=\"placeholder-subtitle\">支持中文名、英文名或特征描述</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n  \r\n      <!-- 通识模式 - 卡片翻阅 -->\r\n      <view v-else class=\"general-mode\">\r\n        <!-- 进度指示器 -->\r\n        <view class=\"progress-indicator\">\r\n          <text class=\"progress-text\">{{ currentDisplayPage }} / {{ safeTotalCards }}</text>\r\n          <view class=\"progress-bar\">\r\n            <view \r\n              class=\"progress-fill\" \r\n              :style=\"{ width: `${safeTotalCards > 0 ? (currentDisplayPage / safeTotalCards) * 100 : 0}%` }\"\r\n            ></view>\r\n          </view>\r\n        </view>\r\n  \r\n        <!-- 卡片容器 - 重新设计的翻页效果 -->\r\n        <view class=\"card-stack-container\">\r\n          <view \r\n            class=\"card-stack\"\r\n            @touchstart=\"onTouchStart\"\r\n            @touchmove=\"onTouchMove\"\r\n            @touchend=\"onTouchEnd\"\r\n          >\r\n            <!-- 背景卡片（下一张的预览） -->\r\n            <view \r\n              v-if=\"safeCurrentIndex < safeTotalCards - 1 && safeTotalCards > 1\"\r\n              class=\"card-item background-card\"\r\n              :style=\"backgroundCardStyle\"\r\n            >\r\n              <bird-knowledge-card \r\n                :bird-data=\"birdCards[safeCurrentIndex + 1]\"\r\n                :is-active=\"false\"\r\n                @like=\"onCardLike\"\r\n                @share=\"onCardShare\"\r\n              ></bird-knowledge-card>\r\n            </view>\r\n            \r\n            <!-- 当前卡片 -->\r\n            <view \r\n              v-if=\"safeTotalCards > 0 && birdCards[safeCurrentIndex]\"\r\n              class=\"card-item current-card\"\r\n              :style=\"currentCardStyle\"\r\n              :class=\"{ 'card-flipping': isFlipping }\"\r\n            >\r\n              <bird-knowledge-card \r\n                :bird-data=\"birdCards[safeCurrentIndex]\"\r\n                :is-active=\"true\"\r\n                @like=\"onCardLike\"\r\n                @share=\"onCardShare\"\r\n              ></bird-knowledge-card>\r\n            </view>\r\n          </view>\r\n        </view>\r\n  \r\n        <!-- 操作提示 -->\r\n        <view class=\"operation-tips\" :class=\"{ 'tips-hidden': isFlipping }\">\r\n          <view class=\"tip-item\">\r\n            <image src=\"/static/icons/swipe-up.png\" class=\"tip-icon\"></image>\r\n            <text class=\"tip-text\">上滑查看下一张</text>\r\n          </view>\r\n          <view class=\"tip-item\">\r\n            <image src=\"/static/icons/tap.png\" class=\"tip-icon\"></image>\r\n            <text class=\"tip-text\">点击卡片查看详情</text>\r\n          </view>\r\n        </view>\r\n  \r\n        <!-- 底部导航按钮 -->\r\n        <view class=\"bottom-actions\">\r\n          <view \r\n            class=\"action-button prev-btn\"\r\n            :class=\"{ 'btn-disabled': !canGoPrevious }\"\r\n            @click=\"previousCard\"\r\n          >\r\n            <image src=\"/static/icons/prev.png\" class=\"action-icon\"></image>\r\n            <text class=\"action-text\">上一张</text>\r\n          </view>\r\n  \r\n          <view class=\"card-counter\">\r\n            <text class=\"counter-text\">{{ currentDisplayPage }}</text>\r\n            <view class=\"counter-divider\"></view>\r\n            <text class=\"counter-total\">{{ safeTotalCards }}</text>\r\n          </view>\r\n  \r\n          <view \r\n            class=\"action-button next-btn\"\r\n            :class=\"{ 'btn-disabled': !canGoNext }\"\r\n            @click=\"nextCard\"\r\n          >\r\n            <text class=\"action-text\">下一张</text>\r\n            <image src=\"/static/icons/next.png\" class=\"action-icon\"></image>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, computed, watch } from 'vue';\r\n  import BirdKnowledgeCard from '@/components/BirdKnowledgeCard.vue';\r\n  \r\n  // ========== 响应式数据 ==========\r\n  const currentMode = ref('search'); // 'search' | 'general'\r\n  const searchKeyword = ref('');\r\n  const isSearching = ref(false);\r\n  const searchResults = ref([]);\r\n  const currentCardIndex = ref(0); // 确保始终为数字类型\r\n  const birdCards = ref([]);\r\n  \r\n  // ========== 卡片翻页动画相关状态 ==========\r\n  const isFlipping = ref(false);\r\n  const touchStartY = ref(0);\r\n  const touchCurrentY = ref(0);\r\n  const cardTranslateY = ref(0);\r\n  const cardOpacity = ref(1);\r\n  const cardScale = ref(1);\r\n  const backgroundCardScale = ref(0.95);\r\n  const backgroundCardOpacity = ref(0.7);\r\n  \r\n  // ========== 模拟鸟类数据 ==========\r\n  const mockBirdData = [\r\n    {\r\n      id: 1,\r\n      name: '巨嘴鸟',\r\n      scientificName: 'Ramphastos sulfuratus',\r\n      imageUrl: '/static/birds/toucan.jpg',\r\n      tags: ['热带鸟类', '彩色', '大型'],\r\n      habitat: '热带雨林',\r\n      size: '体长50-65cm',\r\n      weight: '500-860克',\r\n      wingspan: '109-152cm',\r\n      diet: '主要以果实为食，偶尔捕食小型动物',\r\n      behavior: '群居性鸟类，善于飞行和攀爬',\r\n      distribution: '中美洲和南美洲的热带雨林',\r\n      conservationStatus: '无危',\r\n      characteristics: [\r\n        '拥有巨大而彩色的喙',\r\n        '羽毛色彩鲜艳',\r\n        '飞行能力强',\r\n        '社交性强'\r\n      ],\r\n      funFacts: [\r\n        '巨嘴鸟的大喙实际上很轻，内部充满了气囊',\r\n        '它们的喙可以占到身体长度的1/3',\r\n        '巨嘴鸟睡觉时会将喙折叠到背上'\r\n      ],\r\n      callDescription: '发出低沉的咕咕声和尖锐的叫声',\r\n      nestingHabits: '在树洞中筑巢，每次产卵2-4枚',\r\n      lifespan: '野外约15-20年'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '蜂鸟',\r\n      scientificName: 'Trochilidae',\r\n      imageUrl: '/static/birds/hummingbird.jpg',\r\n      tags: ['小型鸟类', '快速', '悬停'],\r\n      habitat: '花园、森林边缘',\r\n      size: '体长5-25cm',\r\n      weight: '2-20克',\r\n      wingspan: '5-25cm',\r\n      diet: '花蜜、小昆虫',\r\n      behavior: '能够悬停飞行，翅膀拍打频率极高',\r\n      distribution: '南北美洲',\r\n      conservationStatus: '大多数种类稳定',\r\n      characteristics: [\r\n        '世界上最小的鸟类',\r\n        '能够悬停和倒飞',\r\n        '心跳频率极快',\r\n        '新陈代谢旺盛'\r\n      ],\r\n      funFacts: [\r\n        '蜂鸟的翅膀每秒可拍打80次',\r\n        '它们的心跳每分钟可达1260次',\r\n        '蜂鸟可以倒着飞行',\r\n        '它们的舌头比喙还要长'\r\n      ],\r\n      callDescription: '发出细小的吱吱声',\r\n      nestingHabits: '建造精巧的杯状巢，每次产卵1-3枚',\r\n      lifespan: '野外约3-5年'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '孔雀',\r\n      scientificName: 'Pavo cristatus',\r\n      imageUrl: '/static/birds/peacock.jpg',\r\n      tags: ['大型鸟类', '华丽', '地栖'],\r\n      habitat: '森林、公园、农田',\r\n      size: '体长100-115cm',\r\n      weight: '4-6公斤',\r\n      wingspan: '120-160cm',\r\n      diet: '种子、昆虫、小型爬行动物',\r\n      behavior: '雄鸟会展开尾羽进行求偶炫耀',\r\n      distribution: '南亚、东南亚',\r\n      conservationStatus: '无危',\r\n      characteristics: [\r\n        '雄鸟有华丽的尾羽',\r\n        '能够短距离飞行',\r\n        '叫声洪亮',\r\n        '具有强烈的领域性'\r\n      ],\r\n      funFacts: [\r\n        '孔雀的尾羽可以长达1.5米',\r\n        '尾羽上的眼斑叫做\"眼状斑\"',\r\n        '孔雀实际上可以飞行，但不擅长长距离飞行',\r\n        '雌孔雀被称为\"孔雀雌\"'\r\n      ],\r\n      callDescription: '发出尖锐的叫声，特别是在求偶季节',\r\n      nestingHabits: '在地面筑巢，每次产卵3-5枚',\r\n      lifespan: '野外约15-20年'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: '老鹰',\r\n      scientificName: 'Aquila chrysaetos',\r\n      imageUrl: '/static/birds/eagle.jpg',\r\n      tags: ['猛禽', '大型', '捕食者'],\r\n      habitat: '山地、草原、森林',\r\n      size: '体长75-100cm',\r\n      weight: '3-7公斤',\r\n      wingspan: '180-280cm',\r\n      diet: '小型哺乳动物、鸟类、鱼类',\r\n      behavior: '优秀的猎手，视力极佳',\r\n      distribution: '全球各大洲（除南极洲）',\r\n      conservationStatus: '部分种类濒危',\r\n      characteristics: [\r\n        '视力是人类的8倍',\r\n        '强有力的爪子和喙',\r\n        '飞行能力极强',\r\n        '领域性强'\r\n      ],\r\n      funFacts: [\r\n        '老鹰可以从3公里外发现猎物',\r\n        '它们的俯冲速度可达每小时300公里',\r\n        '老鹰可以活到30岁以上',\r\n        '许多文化将老鹰视为力量和自由的象征'\r\n      ],\r\n      callDescription: '发出尖锐的啸叫声',\r\n      nestingHabits: '在高处筑大型巢穴，每次产卵1-3枚',\r\n      lifespan: '野外约20-30年'\r\n    }\r\n  ];\r\n  \r\n  // ========== 计算属性 ==========\r\n  \r\n  /**\r\n   * 安全的当前页码（确保为数字且在有效范围内）\r\n   */\r\n  const safeCurrentIndex = computed(() => {\r\n    const index = parseInt(currentCardIndex.value) || 0;\r\n    const totalCards = parseInt(birdCards.value.length) || 0;\r\n    if (totalCards === 0) return 0;\r\n    return Math.max(0, Math.min(index, totalCards - 1));\r\n  });\r\n  \r\n  /**\r\n   * 安全的总页数\r\n   */\r\n  const safeTotalCards = computed(() => {\r\n    return parseInt(birdCards.value.length) || 0;\r\n  });\r\n  \r\n  /**\r\n   * 当前显示页码（从1开始）\r\n   */\r\n  const currentDisplayPage = computed(() => {\r\n    return safeCurrentIndex.value + 1;\r\n  });\r\n  \r\n  /**\r\n   * 是否可以向前翻页\r\n   */\r\n  const canGoPrevious = computed(() => {\r\n    return safeCurrentIndex.value > 0 && !isFlipping.value && safeTotalCards.value > 0;\r\n  });\r\n  \r\n  /**\r\n   * 是否可以向后翻页\r\n   */\r\n  const canGoNext = computed(() => {\r\n    return safeCurrentIndex.value < safeTotalCards.value - 1 && !isFlipping.value && safeTotalCards.value > 0;\r\n  });\r\n  \r\n  /**\r\n   * 当前卡片的样式\r\n   */\r\n  const currentCardStyle = computed(() => ({\r\n    transform: `translateY(${cardTranslateY.value}px) scale(${cardScale.value})`,\r\n    opacity: cardOpacity.value,\r\n    zIndex: 10\r\n  }));\r\n  \r\n  /**\r\n   * 背景卡片的样式\r\n   */\r\n  const backgroundCardStyle = computed(() => ({\r\n    transform: `scale(${backgroundCardScale.value})`,\r\n    opacity: backgroundCardOpacity.value,\r\n    zIndex: 5\r\n  }));\r\n  \r\n  // ========== 触摸事件处理 ==========\r\n  \r\n  /**\r\n   * 触摸开始\r\n   * @param {Object} event - 触摸事件\r\n   */\r\n  const onTouchStart = (event) => {\r\n    if (isFlipping.value) return;\r\n    touchStartY.value = event.touches[0].clientY;\r\n    touchCurrentY.value = event.touches[0].clientY;\r\n  };\r\n  \r\n  /**\r\n   * 触摸移动\r\n   * @param {Object} event - 触摸事件\r\n   */\r\n  const onTouchMove = (event) => {\r\n    if (isFlipping.value || birdCards.value.length === 0) return;\r\n    \r\n    touchCurrentY.value = event.touches[0].clientY;\r\n    const deltaY = touchCurrentY.value - touchStartY.value;\r\n    \r\n    // 只处理向上滑动，并确保不是最后一张卡片\r\n    const currentIndex = parseInt(currentCardIndex.value) || 0;\r\n    const totalCards = parseInt(birdCards.value.length) || 0;\r\n    \r\n    if (deltaY < 0 && currentIndex < totalCards - 1) {\r\n      const progress = Math.min(Math.abs(deltaY) / 200, 1);\r\n      \r\n      // 当前卡片渐变效果\r\n      cardTranslateY.value = deltaY;\r\n      cardOpacity.value = 1 - progress * 0.7;\r\n      cardScale.value = 1 - progress * 0.1;\r\n      \r\n      // 背景卡片渐变效果\r\n      backgroundCardScale.value = 0.95 + progress * 0.05;\r\n      backgroundCardOpacity.value = 0.7 + progress * 0.3;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 触摸结束\r\n   * @param {Object} event - 触摸事件\r\n   */\r\n  const onTouchEnd = (event) => {\r\n    if (isFlipping.value || birdCards.value.length === 0) return;\r\n    \r\n    const deltaY = touchCurrentY.value - touchStartY.value;\r\n    \r\n    // 判断是否触发翻页（向上滑动超过100px）\r\n    if (deltaY < -100 && currentCardIndex.value < birdCards.value.length - 1) {\r\n      nextCard();\r\n    } else {\r\n      // 恢复原位\r\n      resetCardPosition();\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 重置卡片位置\r\n   */\r\n  const resetCardPosition = () => {\r\n    cardTranslateY.value = 0;\r\n    cardOpacity.value = 1;\r\n    cardScale.value = 1;\r\n    backgroundCardScale.value = 0.95;\r\n    backgroundCardOpacity.value = 0.7;\r\n  };\r\n  \r\n  // ========== 事件处理函数 ==========\r\n  \r\n  /**\r\n   * 返回上一页\r\n   */\r\n  const goBack = () => {\r\n    uni.navigateBack();\r\n  };\r\n  \r\n  /**\r\n   * 切换模式\r\n   */\r\n  const toggleMode = () => {\r\n    currentMode.value = currentMode.value === 'search' ? 'general' : 'search';\r\n    \r\n    // 模式切换时的反馈\r\n    uni.vibrateShort();\r\n    \r\n    // 如果切换到通识模式，确保有数据\r\n    if (currentMode.value === 'general' && birdCards.value.length === 0) {\r\n      initGeneralMode();\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 搜索输入处理\r\n   */\r\n  const onSearchInput = () => {\r\n    if (searchKeyword.value.trim()) {\r\n      performSearch();\r\n    } else {\r\n      searchResults.value = [];\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 搜索确认处理\r\n   */\r\n  const handleSearchConfirm = () => {\r\n    if (searchKeyword.value.trim()) {\r\n      performSearch();\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 清除搜索\r\n   */\r\n  const clearSearch = () => {\r\n    searchKeyword.value = '';\r\n    searchResults.value = [];\r\n  };\r\n  \r\n  /**\r\n   * 选择鸟类（从搜索结果）\r\n   * @param {Object} bird - 鸟类数据\r\n   */\r\n  const selectBird = (bird) => {\r\n    // 切换到通识模式并定位到选中的鸟类\r\n    currentMode.value = 'general';\r\n    const index = birdCards.value.findIndex(card => card.id === bird.id);\r\n    if (index !== -1) {\r\n      // 确保索引是数字类型\r\n      currentCardIndex.value = parseInt(index);\r\n    }\r\n    \r\n    // 清除搜索状态\r\n    searchKeyword.value = '';\r\n    searchResults.value = [];\r\n    \r\n    // 重置卡片状态\r\n    resetCardPosition();\r\n  };\r\n  \r\n  /**\r\n   * 上一张卡片\r\n   */\r\n  const previousCard = () => {\r\n    // 严格的边界检查和类型检查\r\n    const currentIndex = parseInt(currentCardIndex.value) || 0;\r\n    const totalCards = parseInt(birdCards.value.length) || 0;\r\n    \r\n    if (currentIndex > 0 && !isFlipping.value && totalCards > 0) {\r\n      isFlipping.value = true;\r\n      \r\n      // 翻页动画\r\n      cardTranslateY.value = 50;\r\n      cardOpacity.value = 0;\r\n      \r\n      setTimeout(() => {\r\n        // 确保索引是有效的数字\r\n        const newIndex = Math.max(0, currentIndex - 1);\r\n        currentCardIndex.value = newIndex;\r\n        resetCardPosition();\r\n        isFlipping.value = false;\r\n      }, 300);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 下一张卡片\r\n   */\r\n  const nextCard = () => {\r\n    // 严格的边界检查和类型检查\r\n    const currentIndex = parseInt(currentCardIndex.value) || 0;\r\n    const totalCards = parseInt(birdCards.value.length) || 0;\r\n    \r\n    if (currentIndex < totalCards - 1 && !isFlipping.value && totalCards > 0) {\r\n      isFlipping.value = true;\r\n      \r\n      // 翻页动画\r\n      cardTranslateY.value = -200;\r\n      cardOpacity.value = 0;\r\n      cardScale.value = 0.8;\r\n      \r\n      setTimeout(() => {\r\n        // 确保索引是有效的数字\r\n        const newIndex = Math.min(totalCards - 1, currentIndex + 1);\r\n        currentCardIndex.value = newIndex;\r\n        resetCardPosition();\r\n        isFlipping.value = false;\r\n      }, 300);\r\n      \r\n      // 震动反馈\r\n      uni.vibrateShort();\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 卡片点赞\r\n   * @param {Object} bird - 鸟类数据\r\n   */\r\n  const onCardLike = (bird) => {\r\n    uni.showToast({\r\n      title: '已收藏',\r\n      icon: 'success'\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * 卡片分享\r\n   * @param {Object} bird - 鸟类数据\r\n   */\r\n  const onCardShare = (bird) => {\r\n    uni.showShareMenu({\r\n      title: `分享鸟类：${bird.name}`,\r\n      path: `/pages/BirdEncyclopedia/BirdEncyclopedia?birdId=${bird.id}`\r\n    });\r\n  };\r\n  \r\n  // ========== 业务逻辑函数 ==========\r\n  \r\n  /**\r\n   * 执行搜索\r\n   */\r\n  const performSearch = async () => {\r\n    try {\r\n      isSearching.value = true;\r\n      \r\n      // 模拟API延迟\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n      \r\n      // 模拟搜索逻辑\r\n      const keyword = searchKeyword.value.toLowerCase();\r\n      const results = mockBirdData.filter(bird => \r\n        bird.name.toLowerCase().includes(keyword) ||\r\n        bird.scientificName.toLowerCase().includes(keyword) ||\r\n        bird.tags.some(tag => tag.includes(keyword)) ||\r\n        bird.habitat.includes(keyword)\r\n      );\r\n      \r\n      searchResults.value = results;\r\n      \r\n    } catch (error) {\r\n      console.error('搜索失败:', error);\r\n      uni.showToast({\r\n        title: '搜索失败',\r\n        icon: 'error'\r\n      });\r\n    } finally {\r\n      isSearching.value = false;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 初始化通识模式\r\n   */\r\n  const initGeneralMode = () => {\r\n    birdCards.value = [...mockBirdData];\r\n    // 确保索引重置为0且为数字类型\r\n    currentCardIndex.value = 0;\r\n    resetCardPosition();\r\n  };\r\n  \r\n  /**\r\n   * 加载鸟类数据\r\n   */\r\n  const loadBirdData = async () => {\r\n    try {\r\n      // TODO: 调用实际API\r\n      // const response = await birdAPI.getEncyclopedia();\r\n      \r\n      // 使用模拟数据\r\n      birdCards.value = [...mockBirdData];\r\n      \r\n    } catch (error) {\r\n      console.error('加载数据失败:', error);\r\n      uni.showToast({\r\n        title: '加载失败',\r\n        icon: 'error'\r\n      });\r\n    }\r\n  };\r\n  \r\n  // ========== 监听器 ==========\r\n  \r\n  /**\r\n   * 监听数据变化，确保索引始终有效\r\n   */\r\n  watch([birdCards, currentCardIndex], ([newBirdCards, newIndex]) => {\r\n    const totalCards = parseInt(newBirdCards.length) || 0;\r\n    const currentIndex = parseInt(newIndex) || 0;\r\n    \r\n    if (totalCards > 0) {\r\n      // 确保索引在有效范围内\r\n      const validIndex = Math.max(0, Math.min(currentIndex, totalCards - 1));\r\n      if (validIndex !== currentIndex) {\r\n        currentCardIndex.value = validIndex;\r\n      }\r\n    } else {\r\n      // 如果没有数据，重置为0\r\n      currentCardIndex.value = 0;\r\n    }\r\n  }, { deep: true });\r\n  \r\n  // ========== 生命周期 ==========\r\n  onMounted(async () => {\r\n    // 检查是否有传入的鸟类ID参数\r\n    const pages = getCurrentPages();\r\n    const currentPage = pages[pages.length - 1];\r\n    const options = currentPage.options || {};\r\n    \r\n    if (options.birdId) {\r\n      // 如果有指定鸟类ID，切换到通识模式并定位\r\n      currentMode.value = 'general';\r\n      await loadBirdData();\r\n      const targetId = parseInt(options.birdId);\r\n      const index = birdCards.value.findIndex(bird => bird.id === targetId);\r\n      if (index !== -1) {\r\n        // 确保索引是数字类型且在有效范围内\r\n        currentCardIndex.value = Math.max(0, Math.min(index, birdCards.value.length - 1));\r\n      }\r\n    } else {\r\n      // 默认加载数据\r\n      await loadBirdData();\r\n    }\r\n    \r\n    // 初始化卡片状态\r\n    resetCardPosition();\r\n    \r\n    // 确保索引在有效范围内\r\n    if (birdCards.value.length > 0) {\r\n      currentCardIndex.value = Math.max(0, Math.min(currentCardIndex.value, birdCards.value.length - 1));\r\n    }\r\n  });\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  // ========== 主容器样式 ==========\r\n  .encyclopedia-container {\r\n    min-height: 100vh;\r\n    background: linear-gradient(180deg, #f8fffe 0%, #ffffff 100%);\r\n    position: relative;\r\n  }\r\n  \r\n  // ========== 自定义导航栏样式 ==========\r\n  .custom-navbar {\r\n    height: 88rpx;\r\n    background: linear-gradient(135deg, #4caf50 0%, #43a047 100%);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 32rpx;\r\n    padding-top: var(--status-bar-height, 0);\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 1000;\r\n    box-shadow: 0 2rpx 16rpx rgba(76, 175, 80, 0.2);\r\n  }\r\n  \r\n  .navbar-left, .navbar-right {\r\n    width: 80rpx;\r\n    height: 60rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .back-icon {\r\n    width: 36rpx;\r\n    height: 36rpx;\r\n  }\r\n  \r\n  .navbar-title {\r\n    font-size: 32rpx;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n  }\r\n  \r\n  .mode-switch {\r\n    width: 60rpx;\r\n    height: 60rpx;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    border-radius: 30rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.3s ease;\r\n    \r\n    &:active {\r\n      transform: scale(0.9);\r\n    }\r\n    \r\n    &.mode-switch-active {\r\n      background: rgba(255, 255, 255, 0.3);\r\n    }\r\n  }\r\n  \r\n  .mode-icon {\r\n    width: 32rpx;\r\n    height: 32rpx;\r\n  }\r\n  \r\n  // ========== 搜索模式样式 ==========\r\n  .search-mode {\r\n    flex: 1;\r\n    padding: 24rpx 32rpx;\r\n  }\r\n  \r\n  .search-section {\r\n    margin-bottom: 32rpx;\r\n  }\r\n  \r\n  .search-input-wrapper {\r\n    position: relative;\r\n    height: 88rpx;\r\n    background: white;\r\n    border-radius: 44rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 24rpx;\r\n    box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n    border: 2rpx solid #f0f0f0;\r\n    transition: all 0.3s ease;\r\n    \r\n    &:focus-within {\r\n      border-color: #4caf50;\r\n      box-shadow: 0 4rpx 24rpx rgba(76, 175, 80, 0.15);\r\n    }\r\n  }\r\n  \r\n  .search-icon {\r\n    width: 36rpx;\r\n    height: 36rpx;\r\n    margin-right: 16rpx;\r\n    opacity: 0.6;\r\n  }\r\n  \r\n  .search-input {\r\n    flex: 1;\r\n    font-size: 28rpx;\r\n    color: #333;\r\n    height: 100%;\r\n  }\r\n  \r\n  .clear-btn {\r\n    width: 48rpx;\r\n    height: 48rpx;\r\n    background: rgba(0, 0, 0, 0.05);\r\n    border-radius: 24rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    &:active {\r\n      background: rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n  \r\n  .clear-icon {\r\n    width: 24rpx;\r\n    height: 24rpx;\r\n  }\r\n  \r\n  .search-results {\r\n    flex: 1;\r\n    min-height: 60vh;\r\n  }\r\n  \r\n  .loading-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 120rpx 0;\r\n  }\r\n  \r\n  .loading-spinner {\r\n    width: 60rpx;\r\n    height: 60rpx;\r\n    border: 4rpx solid #e0e0e0;\r\n    border-top-color: #4caf50;\r\n    border-radius: 50%;\r\n    animation: spin 1s linear infinite;\r\n    margin-bottom: 20rpx;\r\n  }\r\n  \r\n  @keyframes spin {\r\n    to { transform: rotate(360deg); }\r\n  }\r\n  \r\n  .loading-text {\r\n    font-size: 28rpx;\r\n    color: #666;\r\n  }\r\n  \r\n  .results-grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 20rpx;\r\n  }\r\n  \r\n  .result-card {\r\n    background: white;\r\n    border-radius: 24rpx;\r\n    overflow: hidden;\r\n    box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n    transition: all 0.3s ease;\r\n    animation: slideInUp 0.5s ease both;\r\n    \r\n    &:active {\r\n      transform: scale(0.98);\r\n    }\r\n  }\r\n  \r\n  @keyframes slideInUp {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(30rpx);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n  \r\n  .result-image {\r\n    width: 100%;\r\n    height: 200rpx;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .result-content {\r\n    padding: 24rpx;\r\n  }\r\n  \r\n  .result-name {\r\n    font-size: 32rpx;\r\n    font-weight: 600;\r\n    color: #333;\r\n    margin-bottom: 8rpx;\r\n    display: block;\r\n  }\r\n  \r\n  .result-scientific {\r\n    font-size: 24rpx;\r\n    color: #666;\r\n    font-style: italic;\r\n    margin-bottom: 16rpx;\r\n    display: block;\r\n  }\r\n  \r\n  .result-tags {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8rpx;\r\n  }\r\n  \r\n  .result-tag {\r\n    background: rgba(76, 175, 80, 0.1);\r\n    color: #4caf50;\r\n    padding: 6rpx 12rpx;\r\n    border-radius: 12rpx;\r\n    font-size: 20rpx;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .no-results, .search-placeholder {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 120rpx 40rpx;\r\n    text-align: center;\r\n  }\r\n  \r\n  .no-results-icon, .placeholder-icon {\r\n    width: 120rpx;\r\n    height: 120rpx;\r\n    margin-bottom: 24rpx;\r\n    opacity: 0.6;\r\n  }\r\n  \r\n  .no-results-text, .placeholder-text {\r\n    font-size: 28rpx;\r\n    color: #666;\r\n    font-weight: 500;\r\n    margin-bottom: 8rpx;\r\n  }\r\n  \r\n  .no-results-subtitle, .placeholder-subtitle {\r\n    font-size: 24rpx;\r\n    color: #999;\r\n  }\r\n  \r\n  // ========== 通识模式样式 ==========\r\n  .general-mode {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: calc(100vh - 88rpx);\r\n  }\r\n  \r\n  .progress-indicator {\r\n    padding: 20rpx 32rpx;\r\n    background: white;\r\n  }\r\n  \r\n  .progress-text {\r\n    font-size: 24rpx;\r\n    color: #666;\r\n    text-align: center;\r\n    margin-bottom: 12rpx;\r\n    display: block;\r\n  }\r\n  \r\n  .progress-bar {\r\n    height: 6rpx;\r\n    background: #f0f0f0;\r\n    border-radius: 3rpx;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .progress-fill {\r\n    height: 100%;\r\n    background: linear-gradient(90deg, #4caf50 0%, #66bb6a 100%);\r\n    border-radius: 3rpx;\r\n    transition: width 0.3s ease;\r\n  }\r\n  \r\n  // ========== 卡片堆叠容器样式 ==========\r\n  .card-stack-container {\r\n    flex: 1;\r\n    position: relative;\r\n    padding: 20rpx 32rpx;\r\n    margin-bottom: 20rpx;\r\n  }\r\n  \r\n  .card-stack {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    perspective: 1000px;\r\n  }\r\n  \r\n  .card-item {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    border-radius: 32rpx;\r\n    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n    transform-origin: center center;\r\n  }\r\n  \r\n  .current-card {\r\n    z-index: 10;\r\n    \r\n    &.card-flipping {\r\n      transition: all 0.3s ease;\r\n    }\r\n  }\r\n  \r\n  .background-card {\r\n    z-index: 5;\r\n    filter: blur(1px);\r\n  }\r\n  \r\n  // ========== 操作提示样式 ==========\r\n  .operation-tips {\r\n    position: absolute;\r\n    right: 32rpx;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 24rpx;\r\n    z-index: 15;\r\n    transition: opacity 0.3s ease;\r\n    \r\n    &.tips-hidden {\r\n      opacity: 0;\r\n    }\r\n  }\r\n  \r\n  .tip-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8rpx;\r\n    background: rgba(0, 0, 0, 0.6);\r\n    padding: 12rpx 16rpx;\r\n    border-radius: 20rpx;\r\n    opacity: 0.7;\r\n    backdrop-filter: blur(10rpx);\r\n  }\r\n  \r\n  .tip-icon {\r\n    width: 24rpx;\r\n    height: 24rpx;\r\n  }\r\n  \r\n  .tip-text {\r\n    font-size: 20rpx;\r\n    color: white;\r\n  }\r\n  \r\n  // ========== 底部操作栏样式 ==========\r\n  .bottom-actions {\r\n    height: 120rpx;\r\n    background: white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 40rpx;\r\n    border-top: 1rpx solid #f0f0f0;\r\n    box-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n  }\r\n  \r\n  .action-button {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8rpx;\r\n    padding: 16rpx 24rpx;\r\n    background: rgba(76, 175, 80, 0.1);\r\n    border-radius: 24rpx;\r\n    transition: all 0.3s ease;\r\n    \r\n    &:active:not(.btn-disabled) {\r\n      transform: scale(0.95);\r\n      background: rgba(76, 175, 80, 0.2);\r\n    }\r\n    \r\n    &.btn-disabled {\r\n      opacity: 0.3;\r\n      pointer-events: none;\r\n    }\r\n  }\r\n  \r\n  .action-icon {\r\n    width: 24rpx;\r\n    height: 24rpx;\r\n  }\r\n  \r\n  .action-text {\r\n    font-size: 24rpx;\r\n    color: #4caf50;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .card-counter {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8rpx;\r\n  }\r\n  \r\n  .counter-text, .counter-total {\r\n    font-size: 28rpx;\r\n    font-weight: 600;\r\n    color: #333;\r\n  }\r\n  \r\n  .counter-text {\r\n    color: #4caf50;\r\n  }\r\n  \r\n  .counter-divider {\r\n    width: 2rpx;\r\n    height: 24rpx;\r\n    background: #ddd;\r\n  }\r\n  \r\n  // ========== 响应式适配 ==========\r\n  @media screen and (max-width: 750rpx) {\r\n    .search-mode {\r\n      padding: 20rpx 24rpx;\r\n    }\r\n    \r\n    .card-stack-container {\r\n      padding: 16rpx 24rpx;\r\n    }\r\n    \r\n    .operation-tips {\r\n      right: 24rpx;\r\n    }\r\n    \r\n    .bottom-actions {\r\n      padding: 0 32rpx;\r\n    }\r\n  }\r\n  </style>","import MiniProgramPage from 'D:/sitp项目/miniprogram/bird-frontend/pages/BirdEncyclopedia/BirdEncyclopedia.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","computed","uni","watch","onMounted"],"mappings":";;;;;;AAuLE,MAAM,oBAAoB,MAAW;;;;AAGrC,UAAM,cAAcA,kBAAI,QAAQ;AAChC,UAAM,gBAAgBA,kBAAI,EAAE;AAC5B,UAAM,cAAcA,kBAAI,KAAK;AAC7B,UAAM,gBAAgBA,kBAAI,CAAA,CAAE;AAC5B,UAAM,mBAAmBA,kBAAI,CAAC;AAC9B,UAAM,YAAYA,kBAAI,CAAA,CAAE;AAGxB,UAAM,aAAaA,kBAAI,KAAK;AAC5B,UAAM,cAAcA,kBAAI,CAAC;AACzB,UAAM,gBAAgBA,kBAAI,CAAC;AAC3B,UAAM,iBAAiBA,kBAAI,CAAC;AAC5B,UAAM,cAAcA,kBAAI,CAAC;AACzB,UAAM,YAAYA,kBAAI,CAAC;AACvB,UAAM,sBAAsBA,kBAAI,IAAI;AACpC,UAAM,wBAAwBA,kBAAI,GAAG;AAGrC,UAAM,eAAe;AAAA,MACnB;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,MAAM,CAAC,QAAQ,MAAM,IAAI;AAAA,QACzB,SAAS;AAAA,QACT,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,QACV,cAAc;AAAA,QACd,oBAAoB;AAAA,QACpB,iBAAiB;AAAA,UACf;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACD,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACD,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,UAAU;AAAA,MACX;AAAA,MACD;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,MAAM,CAAC,QAAQ,MAAM,IAAI;AAAA,QACzB,SAAS;AAAA,QACT,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,QACV,cAAc;AAAA,QACd,oBAAoB;AAAA,QACpB,iBAAiB;AAAA,UACf;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACD,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACD,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,UAAU;AAAA,MACX;AAAA,MACD;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,MAAM,CAAC,QAAQ,MAAM,IAAI;AAAA,QACzB,SAAS;AAAA,QACT,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,QACV,cAAc;AAAA,QACd,oBAAoB;AAAA,QACpB,iBAAiB;AAAA,UACf;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACD,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACD,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,UAAU;AAAA,MACX;AAAA,MACD;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,MAAM,CAAC,MAAM,MAAM,KAAK;AAAA,QACxB,SAAS;AAAA,QACT,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,QACV,cAAc;AAAA,QACd,oBAAoB;AAAA,QACpB,iBAAiB;AAAA,UACf;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACD,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACD,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,UAAU;AAAA,MACX;AAAA,IACL;AAOE,UAAM,mBAAmBC,cAAAA,SAAS,MAAM;AACtC,YAAM,QAAQ,SAAS,iBAAiB,KAAK,KAAK;AAClD,YAAM,aAAa,SAAS,UAAU,MAAM,MAAM,KAAK;AACvD,UAAI,eAAe;AAAG,eAAO;AAC7B,aAAO,KAAK,IAAI,GAAG,KAAK,IAAI,OAAO,aAAa,CAAC,CAAC;AAAA,IACtD,CAAG;AAKD,UAAM,iBAAiBA,cAAAA,SAAS,MAAM;AACpC,aAAO,SAAS,UAAU,MAAM,MAAM,KAAK;AAAA,IAC/C,CAAG;AAKD,UAAM,qBAAqBA,cAAAA,SAAS,MAAM;AACxC,aAAO,iBAAiB,QAAQ;AAAA,IACpC,CAAG;AAKD,UAAM,gBAAgBA,cAAAA,SAAS,MAAM;AACnC,aAAO,iBAAiB,QAAQ,KAAK,CAAC,WAAW,SAAS,eAAe,QAAQ;AAAA,IACrF,CAAG;AAKD,UAAM,YAAYA,cAAAA,SAAS,MAAM;AAC/B,aAAO,iBAAiB,QAAQ,eAAe,QAAQ,KAAK,CAAC,WAAW,SAAS,eAAe,QAAQ;AAAA,IAC5G,CAAG;AAKD,UAAM,mBAAmBA,cAAAA,SAAS,OAAO;AAAA,MACvC,WAAW,cAAc,eAAe,KAAK,aAAa,UAAU,KAAK;AAAA,MACzE,SAAS,YAAY;AAAA,MACrB,QAAQ;AAAA,IACT,EAAC;AAKF,UAAM,sBAAsBA,cAAAA,SAAS,OAAO;AAAA,MAC1C,WAAW,SAAS,oBAAoB,KAAK;AAAA,MAC7C,SAAS,sBAAsB;AAAA,MAC/B,QAAQ;AAAA,IACT,EAAC;AAQF,UAAM,eAAe,CAAC,UAAU;AAC9B,UAAI,WAAW;AAAO;AACtB,kBAAY,QAAQ,MAAM,QAAQ,CAAC,EAAE;AACrC,oBAAc,QAAQ,MAAM,QAAQ,CAAC,EAAE;AAAA,IAC3C;AAME,UAAM,cAAc,CAAC,UAAU;AAC7B,UAAI,WAAW,SAAS,UAAU,MAAM,WAAW;AAAG;AAEtD,oBAAc,QAAQ,MAAM,QAAQ,CAAC,EAAE;AACvC,YAAM,SAAS,cAAc,QAAQ,YAAY;AAGjD,YAAM,eAAe,SAAS,iBAAiB,KAAK,KAAK;AACzD,YAAM,aAAa,SAAS,UAAU,MAAM,MAAM,KAAK;AAEvD,UAAI,SAAS,KAAK,eAAe,aAAa,GAAG;AAC/C,cAAM,WAAW,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,CAAC;AAGnD,uBAAe,QAAQ;AACvB,oBAAY,QAAQ,IAAI,WAAW;AACnC,kBAAU,QAAQ,IAAI,WAAW;AAGjC,4BAAoB,QAAQ,OAAO,WAAW;AAC9C,8BAAsB,QAAQ,MAAM,WAAW;AAAA,MAChD;AAAA,IACL;AAME,UAAM,aAAa,CAAC,UAAU;AAC5B,UAAI,WAAW,SAAS,UAAU,MAAM,WAAW;AAAG;AAEtD,YAAM,SAAS,cAAc,QAAQ,YAAY;AAGjD,UAAI,SAAS,QAAQ,iBAAiB,QAAQ,UAAU,MAAM,SAAS,GAAG;AACxE;MACN,OAAW;AAEL;MACD;AAAA,IACL;AAKE,UAAM,oBAAoB,MAAM;AAC9B,qBAAe,QAAQ;AACvB,kBAAY,QAAQ;AACpB,gBAAU,QAAQ;AAClB,0BAAoB,QAAQ;AAC5B,4BAAsB,QAAQ;AAAA,IAClC;AAOE,UAAM,SAAS,MAAM;AACnBC,oBAAG,MAAC,aAAY;AAAA,IACpB;AAKE,UAAM,aAAa,MAAM;AACvB,kBAAY,QAAQ,YAAY,UAAU,WAAW,YAAY;AAGjEA,oBAAG,MAAC,aAAY;AAGhB,UAAI,YAAY,UAAU,aAAa,UAAU,MAAM,WAAW,GAAG;AACnE;MACD;AAAA,IACL;AAKE,UAAM,gBAAgB,MAAM;AAC1B,UAAI,cAAc,MAAM,QAAQ;AAC9B;MACN,OAAW;AACL,sBAAc,QAAQ;MACvB;AAAA,IACL;AAKE,UAAM,sBAAsB,MAAM;AAChC,UAAI,cAAc,MAAM,QAAQ;AAC9B;MACD;AAAA,IACL;AAKE,UAAM,cAAc,MAAM;AACxB,oBAAc,QAAQ;AACtB,oBAAc,QAAQ;IAC1B;AAME,UAAM,aAAa,CAAC,SAAS;AAE3B,kBAAY,QAAQ;AACpB,YAAM,QAAQ,UAAU,MAAM,UAAU,UAAQ,KAAK,OAAO,KAAK,EAAE;AACnE,UAAI,UAAU,IAAI;AAEhB,yBAAiB,QAAQ,SAAS,KAAK;AAAA,MACxC;AAGD,oBAAc,QAAQ;AACtB,oBAAc,QAAQ;AAGtB;IACJ;AAKE,UAAM,eAAe,MAAM;AAEzB,YAAM,eAAe,SAAS,iBAAiB,KAAK,KAAK;AACzD,YAAM,aAAa,SAAS,UAAU,MAAM,MAAM,KAAK;AAEvD,UAAI,eAAe,KAAK,CAAC,WAAW,SAAS,aAAa,GAAG;AAC3D,mBAAW,QAAQ;AAGnB,uBAAe,QAAQ;AACvB,oBAAY,QAAQ;AAEpB,mBAAW,MAAM;AAEf,gBAAM,WAAW,KAAK,IAAI,GAAG,eAAe,CAAC;AAC7C,2BAAiB,QAAQ;AACzB;AACA,qBAAW,QAAQ;AAAA,QACpB,GAAE,GAAG;AAAA,MACP;AAAA,IACL;AAKE,UAAM,WAAW,MAAM;AAErB,YAAM,eAAe,SAAS,iBAAiB,KAAK,KAAK;AACzD,YAAM,aAAa,SAAS,UAAU,MAAM,MAAM,KAAK;AAEvD,UAAI,eAAe,aAAa,KAAK,CAAC,WAAW,SAAS,aAAa,GAAG;AACxE,mBAAW,QAAQ;AAGnB,uBAAe,QAAQ;AACvB,oBAAY,QAAQ;AACpB,kBAAU,QAAQ;AAElB,mBAAW,MAAM;AAEf,gBAAM,WAAW,KAAK,IAAI,aAAa,GAAG,eAAe,CAAC;AAC1D,2BAAiB,QAAQ;AACzB;AACA,qBAAW,QAAQ;AAAA,QACpB,GAAE,GAAG;AAGNA,sBAAG,MAAC,aAAY;AAAA,MACjB;AAAA,IACL;AAME,UAAM,aAAa,CAAC,SAAS;AAC3BA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,MAAM;AAAA,MACZ,CAAK;AAAA,IACL;AAME,UAAM,cAAc,CAAC,SAAS;AAC5BA,oBAAAA,MAAI,cAAc;AAAA,QAChB,OAAO,QAAQ,KAAK,IAAI;AAAA,QACxB,MAAM,mDAAmD,KAAK,EAAE;AAAA,MACtE,CAAK;AAAA,IACL;AAOE,UAAM,gBAAgB,YAAY;AAChC,UAAI;AACF,oBAAY,QAAQ;AAGpB,cAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,GAAG,CAAC;AAGrD,cAAM,UAAU,cAAc,MAAM,YAAW;AAC/C,cAAM,UAAU,aAAa;AAAA,UAAO,UAClC,KAAK,KAAK,cAAc,SAAS,OAAO,KACxC,KAAK,eAAe,cAAc,SAAS,OAAO,KAClD,KAAK,KAAK,KAAK,SAAO,IAAI,SAAS,OAAO,CAAC,KAC3C,KAAK,QAAQ,SAAS,OAAO;AAAA,QACrC;AAEM,sBAAc,QAAQ;AAAA,MAEvB,SAAQ,OAAO;AACdA,sBAAc,MAAA,MAAA,SAAA,sDAAA,SAAS,KAAK;AAC5BA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACd,CAAO;AAAA,MACP,UAAc;AACR,oBAAY,QAAQ;AAAA,MACrB;AAAA,IACL;AAKE,UAAM,kBAAkB,MAAM;AAC5B,gBAAU,QAAQ,CAAC,GAAG,YAAY;AAElC,uBAAiB,QAAQ;AACzB;IACJ;AAKE,UAAM,eAAe,YAAY;AAC/B,UAAI;AAKF,kBAAU,QAAQ,CAAC,GAAG,YAAY;AAAA,MAEnC,SAAQ,OAAO;AACdA,iGAAc,WAAW,KAAK;AAC9BA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACd,CAAO;AAAA,MACF;AAAA,IACL;AAOEC,kBAAK,MAAC,CAAC,WAAW,gBAAgB,GAAG,CAAC,CAAC,cAAc,QAAQ,MAAM;AACjE,YAAM,aAAa,SAAS,aAAa,MAAM,KAAK;AACpD,YAAM,eAAe,SAAS,QAAQ,KAAK;AAE3C,UAAI,aAAa,GAAG;AAElB,cAAM,aAAa,KAAK,IAAI,GAAG,KAAK,IAAI,cAAc,aAAa,CAAC,CAAC;AACrE,YAAI,eAAe,cAAc;AAC/B,2BAAiB,QAAQ;AAAA,QAC1B;AAAA,MACP,OAAW;AAEL,yBAAiB,QAAQ;AAAA,MAC1B;AAAA,IACL,GAAK,EAAE,MAAM,KAAI,CAAE;AAGjBC,kBAAAA,UAAU,YAAY;AAEpB,YAAM,QAAQ;AACd,YAAM,cAAc,MAAM,MAAM,SAAS,CAAC;AAC1C,YAAM,UAAU,YAAY,WAAW;AAEvC,UAAI,QAAQ,QAAQ;AAElB,oBAAY,QAAQ;AACpB,cAAM,aAAY;AAClB,cAAM,WAAW,SAAS,QAAQ,MAAM;AACxC,cAAM,QAAQ,UAAU,MAAM,UAAU,UAAQ,KAAK,OAAO,QAAQ;AACpE,YAAI,UAAU,IAAI;AAEhB,2BAAiB,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,OAAO,UAAU,MAAM,SAAS,CAAC,CAAC;AAAA,QACjF;AAAA,MACP,OAAW;AAEL,cAAM,aAAY;AAAA,MACnB;AAGD;AAGA,UAAI,UAAU,MAAM,SAAS,GAAG;AAC9B,yBAAiB,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,iBAAiB,OAAO,UAAU,MAAM,SAAS,CAAC,CAAC;AAAA,MAClG;AAAA,IACL,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3sBH,GAAG,WAAW,eAAe;"}