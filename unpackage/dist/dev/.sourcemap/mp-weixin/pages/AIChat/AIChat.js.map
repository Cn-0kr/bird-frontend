{"version":3,"file":"AIChat.js","sources":["pages/AIChat/AIChat.vue","../../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvQUlDaGF0L0FJQ2hhdC52dWU"],"sourcesContent":["<template>\r\n    <view class=\"ai-chat-container\">\r\n      <!-- 自定义导航栏 -->\r\n      <view class=\"custom-navbar\">\r\n        <view class=\"navbar-left\" @click=\"goBack\">\r\n          <image src=\"/static/icons/back.png\" class=\"back-icon\"></image>\r\n        </view>\r\n        <view class=\"navbar-center\">\r\n          <view class=\"ai-avatar-wrapper\">\r\n            <image src=\"/static/icons/ai-avatar.png\" class=\"ai-avatar\"></image>\r\n            <view \r\n              class=\"status-indicator\" \r\n              :class=\"{ 'status-online': isAIOnline, 'status-typing': isAITyping }\"\r\n            ></view>\r\n          </view>\r\n          <view class=\"ai-info\">\r\n            <text class=\"ai-name\">鸟类智能助手</text>\r\n            <text class=\"ai-status\">{{ getAIStatus() }}</text>\r\n          </view>\r\n        </view>\r\n        <view class=\"navbar-right\">\r\n          <view class=\"menu-btn\" @click=\"showMenu\">\r\n            <image src=\"/static/icons/menu.png\" class=\"menu-icon\"></image>\r\n          </view>\r\n        </view>\r\n      </view>\r\n  \r\n      <!-- 消息列表 -->\r\n      <scroll-view \r\n        class=\"message-list\"\r\n        scroll-y\r\n        :scroll-top=\"scrollTop\"\r\n        :enable-back-to-top=\"true\"\r\n        :scroll-with-animation=\"true\"\r\n        @scrolltoupper=\"onScrollToUpper\"\r\n      >\r\n        <!-- 欢迎消息 -->\r\n        <view v-if=\"messageList.length === 0\" class=\"welcome-section\">\r\n          <view class=\"welcome-card\">\r\n            <image src=\"/static/icons/ai-welcome.png\" class=\"welcome-icon\"></image>\r\n            <text class=\"welcome-title\">欢迎来到鸟类智能助手！</text>\r\n            <text class=\"welcome-subtitle\">我可以帮助您解答关于鸟类的任何问题</text>\r\n            <view class=\"suggestion-buttons\">\r\n              <view \r\n                v-for=\"suggestion in quickSuggestions\" \r\n                :key=\"suggestion.id\"\r\n                class=\"suggestion-btn\"\r\n                @click=\"sendSuggestion(suggestion)\"\r\n              >\r\n                <image :src=\"suggestion.icon\" class=\"suggestion-icon\"></image>\r\n                <text class=\"suggestion-text\">{{ suggestion.text }}</text>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </view>\r\n  \r\n        <!-- 消息项 -->\r\n        <view \r\n          v-for=\"(message, index) in messageList\" \r\n          :key=\"message.id\"\r\n          class=\"message-item\"\r\n          :class=\"{ 'message-user': message.type === 'user', 'message-ai': message.type === 'ai' }\"\r\n          :style=\"{ 'animation-delay': `${index * 0.1}s` }\"\r\n        >\r\n          <!-- AI消息 -->\r\n          <view v-if=\"message.type === 'ai'\" class=\"ai-message-wrapper\">\r\n            <image src=\"/static/icons/ai-avatar.png\" class=\"message-avatar\"></image>\r\n            <view class=\"message-content\">\r\n              <view class=\"message-bubble ai-bubble\">\r\n                <!-- 打字动画 -->\r\n                <view v-if=\"message.isTyping\" class=\"typing-indicator\">\r\n                  <view class=\"typing-dot\"></view>\r\n                  <view class=\"typing-dot\"></view>\r\n                  <view class=\"typing-dot\"></view>\r\n                </view>\r\n                <!-- 文本内容 -->\r\n                <rich-text \r\n                  v-else \r\n                  :nodes=\"formatMessageContent(message.content)\"\r\n                  class=\"message-text\"\r\n                ></rich-text>\r\n                <!-- 消息工具栏 -->\r\n                <view v-if=\"!message.isTyping\" class=\"message-toolbar\">\r\n                  <view class=\"toolbar-btn\" @click=\"copyMessage(message)\">\r\n                    <image src=\"/static/icons/copy.png\" class=\"toolbar-icon\"></image>\r\n                  </view>\r\n                  <view class=\"toolbar-btn\" @click=\"likeMessage(message)\">\r\n                    <image \r\n                      :src=\"message.isLiked ? '/static/icons/like-filled.png' : '/static/icons/like.png'\" \r\n                      class=\"toolbar-icon\"\r\n                    ></image>\r\n                  </view>\r\n                  <view class=\"toolbar-btn\" @click=\"shareMessage(message)\">\r\n                    <image src=\"/static/icons/share.png\" class=\"toolbar-icon\"></image>\r\n                  </view>\r\n                </view>\r\n              </view>\r\n              <text class=\"message-time\">{{ formatTime(message.timestamp) }}</text>\r\n            </view>\r\n          </view>\r\n  \r\n          <!-- 用户消息 -->\r\n          <view v-else class=\"user-message-wrapper\">\r\n            <view class=\"message-content\">\r\n              <view class=\"message-bubble user-bubble\">\r\n                <text class=\"message-text\">{{ message.content }}</text>\r\n              </view>\r\n              <text class=\"message-time\">{{ formatTime(message.timestamp) }}</text>\r\n            </view>\r\n            <image src=\"/static/icons/user-avatar.png\" class=\"message-avatar\"></image>\r\n          </view>\r\n        </view>\r\n  \r\n        <!-- 加载更多消息 -->\r\n        <view v-if=\"hasMoreMessages\" class=\"load-more-section\">\r\n          <view class=\"load-more-btn\" @click=\"loadMoreMessages\">\r\n            <image src=\"/static/icons/loading.png\" class=\"load-more-icon\"></image>\r\n            <text class=\"load-more-text\">加载更多消息</text>\r\n          </view>\r\n        </view>\r\n      </scroll-view>\r\n  \r\n      <!-- 输入区域 -->\r\n      <view class=\"input-section\">\r\n        <!-- 快速回复 -->\r\n        <view v-if=\"quickReplies.length > 0\" class=\"quick-replies\">\r\n          <scroll-view class=\"quick-reply-scroll\" scroll-x>\r\n            <view class=\"quick-reply-container\">\r\n              <view \r\n                v-for=\"reply in quickReplies\" \r\n                :key=\"reply.id\"\r\n                class=\"quick-reply-item\"\r\n                @click=\"sendQuickReply(reply)\"\r\n              >\r\n                <text class=\"quick-reply-text\">{{ reply.text }}</text>\r\n              </view>\r\n            </view>\r\n          </scroll-view>\r\n        </view>\r\n  \r\n        <!-- 输入框区域 -->\r\n        <view class=\"input-wrapper\">\r\n          <view class=\"input-container\">\r\n            <view class=\"extra-actions\">\r\n              <view class=\"action-btn voice-btn\" @click=\"startVoiceInput\">\r\n                <image src=\"/static/icons/voice.png\" class=\"action-icon\"></image>\r\n              </view>\r\n              <view class=\"action-btn image-btn\" @click=\"selectImage\">\r\n                <image src=\"/static/icons/image.png\" class=\"action-icon\"></image>\r\n              </view>\r\n            </view>\r\n            \r\n            <textarea \r\n              v-model=\"inputText\"\r\n              placeholder=\"输入您想了解的鸟类问题...\"\r\n              placeholder-class=\"input-placeholder\"\r\n              class=\"text-input\"\r\n              :auto-height=\"true\"\r\n              :maxlength=\"500\"\r\n              @input=\"onInputChange\"\r\n              @focus=\"onInputFocus\"\r\n              @blur=\"onInputBlur\"\r\n              @confirm=\"sendMessage\"\r\n            ></textarea>\r\n            \r\n            <view \r\n              class=\"send-btn\"\r\n              :class=\"{ 'send-btn-active': canSend }\"\r\n              @click=\"sendMessage\"\r\n            >\r\n              <image \r\n                :src=\"canSend ? '/static/icons/send-active.png' : '/static/icons/send.png'\" \r\n                class=\"send-icon\"\r\n              ></image>\r\n            </view>\r\n          </view>\r\n          \r\n          <!-- 字数统计 -->\r\n          <view v-if=\"inputText.length > 0\" class=\"char-count\">\r\n            <text class=\"char-count-text\">{{ inputText.length }}/500</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n  \r\n      <!-- 语音输入遮罩 -->\r\n      <view v-if=\"isVoiceRecording\" class=\"voice-modal\">\r\n        <view class=\"voice-content\">\r\n          <view class=\"voice-animation\">\r\n            <view class=\"voice-circle\" :class=\"{ 'voice-active': isRecording }\"></view>\r\n            <image src=\"/static/icons/microphone.png\" class=\"voice-icon\"></image>\r\n          </view>\r\n          <text class=\"voice-text\">{{ voiceText }}</text>\r\n          <view class=\"voice-actions\">\r\n            <view class=\"voice-cancel\" @click=\"cancelVoiceInput\">取消</view>\r\n            <view class=\"voice-confirm\" @click=\"confirmVoiceInput\">确认</view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, computed, onMounted, nextTick, watch } from 'vue';\r\n  \r\n  // ========== 响应式数据 ==========\r\n  const inputText = ref('');\r\n  const messageList = ref([]);\r\n  const isAIOnline = ref(true);\r\n  const isAITyping = ref(false);\r\n  const scrollTop = ref(0);\r\n  const hasMoreMessages = ref(false);\r\n  const isInputFocused = ref(false);\r\n  const isVoiceRecording = ref(false);\r\n  const isRecording = ref(false);\r\n  const voiceText = ref('正在录音...');\r\n  const quickReplies = ref([]);\r\n  \r\n  // ========== 快速建议数据 ==========\r\n  const quickSuggestions = ref([\r\n    {\r\n      id: 1,\r\n      text: '鸟类识别',\r\n      icon: '/static/icons/identify.png'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: '鸟类习性',\r\n      icon: '/static/icons/behavior.png'\r\n    },\r\n    {\r\n      id: 3,\r\n      text: '观鸟指南',\r\n      icon: '/static/icons/guide.png'\r\n    },\r\n    {\r\n      id: 4,\r\n      text: '保护知识',\r\n      icon: '/static/icons/protection.png'\r\n    }\r\n  ]);\r\n  \r\n  // ========== 计算属性 ==========\r\n  \r\n  /**\r\n   * 是否可以发送消息\r\n   */\r\n  const canSend = computed(() => {\r\n    return inputText.value.trim().length > 0 && !isAITyping.value;\r\n  });\r\n  \r\n  // ========== 事件处理函数 ==========\r\n  \r\n  /**\r\n   * 返回上一页\r\n   */\r\n  const goBack = () => {\r\n    uni.navigateBack();\r\n  };\r\n  \r\n  /**\r\n   * 显示菜单\r\n   */\r\n  const showMenu = () => {\r\n    uni.showActionSheet({\r\n      itemList: ['清空聊天记录', '导出聊天记录', '设置'],\r\n      success: (res) => {\r\n        switch (res.tapIndex) {\r\n          case 0:\r\n            clearChatHistory();\r\n            break;\r\n          case 1:\r\n            exportChatHistory();\r\n            break;\r\n          case 2:\r\n            openSettings();\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * 获取AI状态文本\r\n   */\r\n  const getAIStatus = () => {\r\n    if (isAITyping.value) return '正在输入...';\r\n    if (isAIOnline.value) return '在线';\r\n    return '离线';\r\n  };\r\n  \r\n  /**\r\n   * 输入变化处理\r\n   */\r\n  const onInputChange = () => {\r\n    // 可以在这里实现实时搜索建议等功能\r\n  };\r\n  \r\n  /**\r\n   * 输入框聚焦\r\n   */\r\n  const onInputFocus = () => {\r\n    isInputFocused.value = true;\r\n    scrollToBottom();\r\n  };\r\n  \r\n  /**\r\n   * 输入框失焦\r\n   */\r\n  const onInputBlur = () => {\r\n    isInputFocused.value = false;\r\n  };\r\n  \r\n  /**\r\n   * 滚动到顶部加载更多\r\n   */\r\n  const onScrollToUpper = () => {\r\n    if (hasMoreMessages.value) {\r\n      loadMoreMessages();\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 发送消息\r\n   */\r\n  const sendMessage = async () => {\r\n    if (!canSend.value) return;\r\n    \r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      content: inputText.value.trim(),\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    // 添加用户消息\r\n    messageList.value.push(userMessage);\r\n    \r\n    // 清空输入框\r\n    const currentInput = inputText.value.trim();\r\n    inputText.value = '';\r\n    \r\n    // 滚动到底部\r\n    await nextTick();\r\n    scrollToBottom();\r\n    \r\n    // 发送到AI\r\n    await sendToAI(currentInput);\r\n  };\r\n  \r\n  /**\r\n   * 发送快速建议\r\n   */\r\n  const sendSuggestion = (suggestion) => {\r\n    inputText.value = suggestion.text;\r\n    sendMessage();\r\n  };\r\n  \r\n  /**\r\n   * 发送快速回复\r\n   */\r\n  const sendQuickReply = (reply) => {\r\n    inputText.value = reply.text;\r\n    sendMessage();\r\n  };\r\n  \r\n  /**\r\n   * 开始语音输入\r\n   */\r\n  const startVoiceInput = () => {\r\n    isVoiceRecording.value = true;\r\n    isRecording.value = true;\r\n    voiceText.value = '正在录音...';\r\n    \r\n    // TODO: 实现语音录音功能\r\n    // uni.startRecord({\r\n    //   success: (res) => {\r\n    //     // 处理录音结果\r\n    //   }\r\n    // });\r\n  };\r\n  \r\n  /**\r\n   * 取消语音输入\r\n   */\r\n  const cancelVoiceInput = () => {\r\n    isVoiceRecording.value = false;\r\n    isRecording.value = false;\r\n  };\r\n  \r\n  /**\r\n   * 确认语音输入\r\n   */\r\n  const confirmVoiceInput = () => {\r\n    isVoiceRecording.value = false;\r\n    isRecording.value = false;\r\n    \r\n    // TODO: 处理语音识别结果\r\n    // inputText.value = voiceResult;\r\n  };\r\n  \r\n  /**\r\n   * 选择图片\r\n   */\r\n  const selectImage = () => {\r\n    uni.chooseImage({\r\n      count: 1,\r\n      sizeType: ['original', 'compressed'],\r\n      sourceType: ['album', 'camera'],\r\n      success: (res) => {\r\n        // TODO: 处理图片识别\r\n        handleImageRecognition(res.tempFilePaths[0]);\r\n      }\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * 复制消息\r\n   */\r\n  const copyMessage = (message) => {\r\n    uni.setClipboardData({\r\n      data: message.content,\r\n      success: () => {\r\n        uni.showToast({\r\n          title: '已复制',\r\n          icon: 'success'\r\n        });\r\n      }\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * 点赞消息\r\n   */\r\n  const likeMessage = (message) => {\r\n    message.isLiked = !message.isLiked;\r\n    uni.vibrateShort();\r\n  };\r\n  \r\n  /**\r\n   * 分享消息\r\n   */\r\n  const shareMessage = (message) => {\r\n    uni.showShareMenu({\r\n      title: '分享AI回答',\r\n      path: '/pages/AIChat/AIChat'\r\n    });\r\n  };\r\n  \r\n  // ========== 业务逻辑函数 ==========\r\n  \r\n  /**\r\n   * 发送消息给AI\r\n   * @param {String} message - 用户消息\r\n   */\r\n  const sendToAI = async (message) => {\r\n    try {\r\n      // 添加AI打字状态\r\n      const aiMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'ai',\r\n        content: '',\r\n        timestamp: new Date(),\r\n        isTyping: true\r\n      };\r\n      \r\n      messageList.value.push(aiMessage);\r\n      isAITyping.value = true;\r\n      \r\n      await nextTick();\r\n      scrollToBottom();\r\n      \r\n      // TODO: 调用实际的AI API\r\n      // const response = await aiAPI.chat({\r\n      //   message: message,\r\n      //   context: getConversationContext()\r\n      // });\r\n      \r\n      // 模拟AI响应延迟\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      // 模拟AI回复\r\n      const aiResponse = await generateAIResponse(message);\r\n      \r\n      // 更新AI消息\r\n      const aiMessageIndex = messageList.value.findIndex(msg => msg.id === aiMessage.id);\r\n      if (aiMessageIndex !== -1) {\r\n        messageList.value[aiMessageIndex].content = aiResponse;\r\n        messageList.value[aiMessageIndex].isTyping = false;\r\n        isAITyping.value = false;\r\n      }\r\n      \r\n      // 生成快速回复建议\r\n      generateQuickReplies(aiResponse);\r\n      \r\n      await nextTick();\r\n      scrollToBottom();\r\n      \r\n    } catch (error) {\r\n      console.error('AI响应失败:', error);\r\n      \r\n      // 移除打字状态的消息\r\n      const aiMessageIndex = messageList.value.findIndex(msg => msg.id === aiMessage.id);\r\n      if (aiMessageIndex !== -1) {\r\n        messageList.value.splice(aiMessageIndex, 1);\r\n      }\r\n      \r\n      isAITyping.value = false;\r\n      \r\n      uni.showToast({\r\n        title: 'AI响应失败，请重试',\r\n        icon: 'error'\r\n      });\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 生成AI回复（模拟）\r\n   * @param {String} userMessage - 用户消息\r\n   * @returns {String} AI回复\r\n   */\r\n  const generateAIResponse = async (userMessage) => {\r\n    // 简单的关键词匹配回复（实际项目中应该调用真实的AI API）\r\n    const responses = {\r\n      '鸟类识别': '我可以帮您识别鸟类！请描述一下鸟的特征，比如大小、颜色、叫声等，或者您可以上传照片让我来识别。',\r\n      '鸟类习性': '不同鸟类有着各自独特的习性。您想了解哪种鸟类的习性呢？比如觅食习惯、繁殖行为、迁徙路线等。',\r\n      '观鸟指南': '观鸟是一项很有趣的活动！建议选择清晨或傍晚时间，准备好双筒望远镜，选择公园、湿地等鸟类活动频繁的地方。保持安静，避免惊扰鸟类。',\r\n      '保护知识': '鸟类保护非常重要。我们可以通过保护栖息地、减少污染、不干扰繁殖等方式来保护鸟类。您想了解具体哪个方面的保护知识呢？'\r\n    };\r\n    \r\n    // 查找匹配的关键词\r\n    for (const [keyword, response] of Object.entries(responses)) {\r\n      if (userMessage.includes(keyword)) {\r\n        return response;\r\n      }\r\n    }\r\n    \r\n    // 默认回复\r\n    return '这是一个很好的问题！作为鸟类专家，我很乐意为您解答。您能提供更多具体信息吗？这样我可以给出更准确的回答。';\r\n  };\r\n  \r\n  /**\r\n   * 生成快速回复建议\r\n   * @param {String} aiResponse - AI回复内容\r\n   */\r\n  const generateQuickReplies = (aiResponse) => {\r\n    const defaultReplies = [\r\n      { id: 1, text: '告诉我更多' },\r\n      { id: 2, text: '有相关图片吗？' },\r\n      { id: 3, text: '谢谢' }\r\n    ];\r\n    \r\n    // 根据AI回复内容生成个性化建议（简化版）\r\n    if (aiResponse.includes('识别')) {\r\n      quickReplies.value = [\r\n        { id: 1, text: '上传照片识别' },\r\n        { id: 2, text: '描述特征识别' },\r\n        { id: 3, text: '常见鸟类有哪些？' }\r\n      ];\r\n    } else if (aiResponse.includes('保护')) {\r\n      quickReplies.value = [\r\n        { id: 1, text: '如何参与保护？' },\r\n        { id: 2, text: '濒危鸟类有哪些？' },\r\n        { id: 3, text: '保护法律法规' }\r\n      ];\r\n    } else {\r\n      quickReplies.value = defaultReplies;\r\n    }\r\n    \r\n    // 3秒后自动隐藏快速回复\r\n    setTimeout(() => {\r\n      quickReplies.value = [];\r\n    }, 3000);\r\n  };\r\n  \r\n  /**\r\n   * 处理图片识别\r\n   * @param {String} imagePath - 图片路径\r\n   */\r\n  const handleImageRecognition = async (imagePath) => {\r\n    try {\r\n      uni.showLoading({ title: '识别中...' });\r\n      \r\n      // TODO: 调用图片识别API\r\n      // const result = await imageRecognitionAPI.identify(imagePath);\r\n      \r\n      // 模拟识别延迟\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      uni.hideLoading();\r\n      \r\n      // 模拟识别结果\r\n      const recognitionResult = '根据图片分析，这可能是一只麻雀。麻雀是常见的小型鸟类，体长约14-15厘米...';\r\n      \r\n      // 发送识别结果消息\r\n      const aiMessage = {\r\n        id: Date.now(),\r\n        type: 'ai',\r\n        content: `图片识别结果：\\n\\n${recognitionResult}`,\r\n        timestamp: new Date(),\r\n        isTyping: false\r\n      };\r\n      \r\n      messageList.value.push(aiMessage);\r\n      await nextTick();\r\n      scrollToBottom();\r\n      \r\n    } catch (error) {\r\n      uni.hideLoading();\r\n      console.error('图片识别失败:', error);\r\n      uni.showToast({\r\n        title: '识别失败，请重试',\r\n        icon: 'error'\r\n      });\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 滚动到底部\r\n   */\r\n  const scrollToBottom = () => {\r\n    setTimeout(() => {\r\n      scrollTop.value = 99999;\r\n    }, 100);\r\n  };\r\n  \r\n  /**\r\n   * 格式化消息内容\r\n   * @param {String} content - 消息内容\r\n   * @returns {Array} 富文本节点数组\r\n   */\r\n  const formatMessageContent = (content) => {\r\n    // 简单的富文本格式化（可以扩展支持更多格式）\r\n    return content.split('\\n').map(line => ({\r\n      name: 'div',\r\n      children: [{ type: 'text', text: line }]\r\n    }));\r\n  };\r\n  \r\n  /**\r\n   * 格式化时间\r\n   * @param {Date} timestamp - 时间戳\r\n   * @returns {String} 格式化的时间字符串\r\n   */\r\n  const formatTime = (timestamp) => {\r\n    const now = new Date();\r\n    const date = new Date(timestamp);\r\n    const diff = now - date;\r\n    \r\n    if (diff < 60000) { // 1分钟内\r\n      return '刚刚';\r\n    } else if (diff < 3600000) { // 1小时内\r\n      return `${Math.floor(diff / 60000)}分钟前`;\r\n    } else if (diff < 86400000) { // 1天内\r\n      return `${Math.floor(diff / 3600000)}小时前`;\r\n    } else {\r\n      return `${date.getMonth() + 1}/${date.getDate()} ${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 加载更多消息\r\n   */\r\n  const loadMoreMessages = async () => {\r\n    try {\r\n      // TODO: 实现历史消息加载\r\n      console.log('加载更多消息');\r\n    } catch (error) {\r\n      console.error('加载更多消息失败:', error);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * 清空聊天记录\r\n   */\r\n  const clearChatHistory = () => {\r\n    uni.showModal({\r\n      title: '确认清空',\r\n      content: '确定要清空所有聊天记录吗？',\r\n      success: (res) => {\r\n        if (res.confirm) {\r\n          messageList.value = [];\r\n          uni.showToast({\r\n            title: '已清空',\r\n            icon: 'success'\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * 导出聊天记录\r\n   */\r\n  const exportChatHistory = () => {\r\n    // TODO: 实现聊天记录导出功能\r\n    uni.showToast({\r\n      title: '导出功能开发中',\r\n      icon: 'none'\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * 打开设置\r\n   */\r\n  const openSettings = () => {\r\n    // TODO: 跳转到设置页面\r\n    uni.navigateTo({\r\n      url: '/pages/ChatSettings/ChatSettings'\r\n    });\r\n  };\r\n  \r\n  /**\r\n   * 获取会话上下文\r\n   */\r\n  const getConversationContext = () => {\r\n    // 返回最近的几条消息作为上下文\r\n    return messageList.value.slice(-10).map(msg => ({\r\n      role: msg.type === 'user' ? 'user' : 'assistant',\r\n      content: msg.content\r\n    }));\r\n  };\r\n  \r\n  // ========== 生命周期 ==========\r\n  onMounted(() => {\r\n    // 初始化聊天界面\r\n    console.log('AI聊天页面初始化');\r\n    \r\n    // 设置AI在线状态\r\n    isAIOnline.value = true;\r\n  });\r\n  \r\n  // ========== 监听器 ==========\r\n  watch(messageList, () => {\r\n    // 消息列表变化时自动滚动到底部\r\n    nextTick(() => {\r\n      scrollToBottom();\r\n    });\r\n  }, { deep: true });\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  // ========== 主容器样式 ==========\r\n  .ai-chat-container {\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: linear-gradient(180deg, #f8fffe 0%, #ffffff 100%);\r\n  }\r\n  \r\n  // ========== 自定义导航栏样式 ==========\r\n  .custom-navbar {\r\n    height: 88rpx;\r\n    background: linear-gradient(135deg, #9c27b0 0%, #ab47bc 100%);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 32rpx;\r\n    padding-top: var(--status-bar-height, 0);\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 1000;\r\n    box-shadow: 0 2rpx 16rpx rgba(156, 39, 176, 0.2);\r\n  }\r\n  \r\n  .navbar-left, .navbar-right {\r\n    width: 80rpx;\r\n    height: 60rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .back-icon, .menu-icon {\r\n    width: 36rpx;\r\n    height: 36rpx;\r\n  }\r\n  \r\n  .navbar-center {\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16rpx;\r\n  }\r\n  \r\n  .ai-avatar-wrapper {\r\n    position: relative;\r\n  }\r\n  \r\n  .ai-avatar {\r\n    width: 60rpx;\r\n    height: 60rpx;\r\n    border-radius: 30rpx;\r\n    border: 3rpx solid rgba(255, 255, 255, 0.3);\r\n  }\r\n  \r\n  .status-indicator {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    width: 20rpx;\r\n    height: 20rpx;\r\n    border-radius: 50%;\r\n    border: 3rpx solid white;\r\n    background: #666;\r\n    \r\n    &.status-online {\r\n      background: #4caf50;\r\n    }\r\n    \r\n    &.status-typing {\r\n      background: #ff9800;\r\n      animation: pulse 1.5s infinite;\r\n    }\r\n  }\r\n  \r\n  @keyframes pulse {\r\n    0%, 100% { transform: scale(1); }\r\n    50% { transform: scale(1.2); }\r\n  }\r\n  \r\n  .ai-info {\r\n    flex: 1;\r\n  }\r\n  \r\n  .ai-name {\r\n    display: block;\r\n    font-size: 28rpx;\r\n    font-weight: 600;\r\n    color: white;\r\n    margin-bottom: 4rpx;\r\n  }\r\n  \r\n  .ai-status {\r\n    display: block;\r\n    font-size: 20rpx;\r\n    color: rgba(255, 255, 255, 0.8);\r\n  }\r\n  \r\n  // ========== 消息列表样式 ==========\r\n  .message-list {\r\n    flex: 1;\r\n    padding: 24rpx 32rpx;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .welcome-section {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 80rpx 0;\r\n  }\r\n  \r\n  .welcome-card {\r\n    background: white;\r\n    border-radius: 32rpx;\r\n    padding: 48rpx 32rpx;\r\n    text-align: center;\r\n    box-shadow: 0 8rpx 32rpx rgba(0, 0, 0, 0.08);\r\n    max-width: 500rpx;\r\n  }\r\n  \r\n  .welcome-icon {\r\n    width: 120rpx;\r\n    height: 120rpx;\r\n    margin-bottom: 24rpx;\r\n  }\r\n  \r\n  .welcome-title {\r\n    display: block;\r\n    font-size: 32rpx;\r\n    font-weight: 600;\r\n    color: #333;\r\n    margin-bottom: 12rpx;\r\n  }\r\n  \r\n  .welcome-subtitle {\r\n    display: block;\r\n    font-size: 26rpx;\r\n    color: #666;\r\n    margin-bottom: 32rpx;\r\n    line-height: 1.5;\r\n  }\r\n  \r\n  .suggestion-buttons {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 16rpx;\r\n  }\r\n  \r\n  .suggestion-btn {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 8rpx;\r\n    padding: 20rpx 16rpx;\r\n    background: linear-gradient(135deg, #f3e5f5 0%, #fce4ec 100%);\r\n    border-radius: 20rpx;\r\n    border: 2rpx solid rgba(156, 39, 176, 0.1);\r\n    transition: all 0.3s ease;\r\n    \r\n    &:active {\r\n      transform: scale(0.95);\r\n      background: linear-gradient(135deg, #e1bee7 0%, #f8bbd9 100%);\r\n    }\r\n  }\r\n  \r\n  .suggestion-icon {\r\n    width: 32rpx;\r\n    height: 32rpx;\r\n  }\r\n  \r\n  .suggestion-text {\r\n    font-size: 22rpx;\r\n    color: #9c27b0;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .message-item {\r\n    margin-bottom: 32rpx;\r\n    animation: fadeInUp 0.5s ease both;\r\n    \r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n  \r\n  @keyframes fadeInUp {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(20rpx);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n  \r\n  .ai-message-wrapper {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 16rpx;\r\n  }\r\n  \r\n  .user-message-wrapper {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 16rpx;\r\n    flex-direction: row-reverse;\r\n  }\r\n  \r\n  .message-avatar {\r\n    width: 64rpx;\r\n    height: 64rpx;\r\n    border-radius: 32rpx;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .message-content {\r\n    flex: 1;\r\n    max-width: calc(100% - 80rpx);\r\n  }\r\n  \r\n  .message-bubble {\r\n    padding: 20rpx 24rpx;\r\n    border-radius: 24rpx;\r\n    margin-bottom: 8rpx;\r\n    position: relative;\r\n    word-wrap: break-word;\r\n  }\r\n  \r\n  .ai-bubble {\r\n    background: white;\r\n    border: 2rpx solid rgba(156, 39, 176, 0.1);\r\n    border-bottom-left-radius: 8rpx;\r\n    box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n  }\r\n  \r\n  .user-bubble {\r\n    background: linear-gradient(135deg, #9c27b0 0%, #ab47bc 100%);\r\n    color: white;\r\n    border-bottom-right-radius: 8rpx;\r\n    align-self: flex-end;\r\n  }\r\n  \r\n  .message-text {\r\n    font-size: 28rpx;\r\n    line-height: 1.6;\r\n    color: #333;\r\n  }\r\n  \r\n  .user-bubble .message-text {\r\n    color: white;\r\n  }\r\n  \r\n  .message-time {\r\n    font-size: 20rpx;\r\n    color: #999;\r\n    margin-left: 24rpx;\r\n  }\r\n  \r\n  .user-message-wrapper .message-time {\r\n    text-align: right;\r\n    margin-left: 0;\r\n    margin-right: 24rpx;\r\n  }\r\n  \r\n  // ========== 打字动画样式 ==========\r\n  .typing-indicator {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8rpx;\r\n    padding: 8rpx 0;\r\n  }\r\n  \r\n  .typing-dot {\r\n    width: 12rpx;\r\n    height: 12rpx;\r\n    background: #9c27b0;\r\n    border-radius: 50%;\r\n    animation: typingDot 1.4s infinite ease-in-out;\r\n    \r\n    &:nth-child(1) { animation-delay: -0.32s; }\r\n    &:nth-child(2) { animation-delay: -0.16s; }\r\n    &:nth-child(3) { animation-delay: 0s; }\r\n  }\r\n  \r\n  @keyframes typingDot {\r\n    0%, 80%, 100% {\r\n      transform: scale(0.8);\r\n      opacity: 0.5;\r\n    }\r\n    40% {\r\n      transform: scale(1);\r\n      opacity: 1;\r\n    }\r\n  }\r\n  \r\n  // ========== 消息工具栏样式 ==========\r\n  .message-toolbar {\r\n    display: flex;\r\n    gap: 8rpx;\r\n    margin-top: 12rpx;\r\n    opacity: 0.7;\r\n    transition: opacity 0.3s ease;\r\n  }\r\n  \r\n  .ai-bubble:hover .message-toolbar {\r\n    opacity: 1;\r\n  }\r\n  \r\n  .toolbar-btn {\r\n    width: 48rpx;\r\n    height: 48rpx;\r\n    background: rgba(156, 39, 176, 0.1);\r\n    border-radius: 24rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.3s ease;\r\n    \r\n    &:active {\r\n      transform: scale(0.9);\r\n      background: rgba(156, 39, 176, 0.2);\r\n    }\r\n  }\r\n  \r\n  .toolbar-icon {\r\n    width: 24rpx;\r\n    height: 24rpx;\r\n  }\r\n  \r\n  // ========== 快速回复样式 ==========\r\n  .quick-replies {\r\n    padding: 16rpx 0;\r\n    border-bottom: 1rpx solid #f0f0f0;\r\n  }\r\n  \r\n  .quick-reply-scroll {\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .quick-reply-container {\r\n    display: inline-flex;\r\n    gap: 12rpx;\r\n    padding: 0 32rpx;\r\n  }\r\n  \r\n  .quick-reply-item {\r\n    display: inline-block;\r\n    padding: 12rpx 20rpx;\r\n    background: rgba(156, 39, 176, 0.1);\r\n    border: 2rpx solid rgba(156, 39, 176, 0.2);\r\n    border-radius: 20rpx;\r\n    white-space: nowrap;\r\n    transition: all 0.3s ease;\r\n    \r\n    &:active {\r\n      transform: scale(0.95);\r\n      background: rgba(156, 39, 176, 0.2);\r\n    }\r\n  }\r\n  \r\n  .quick-reply-text {\r\n    font-size: 24rpx;\r\n    color: #9c27b0;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  // ========== 输入区域样式 ==========\r\n  .input-section {\r\n    background: white;\r\n    border-top: 1rpx solid #f0f0f0;\r\n    padding: 16rpx 32rpx;\r\n    padding-bottom: calc(16rpx + env(safe-area-inset-bottom));\r\n  }\r\n  \r\n  .input-wrapper {\r\n    position: relative;\r\n  }\r\n  \r\n  .input-container {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    gap: 16rpx;\r\n    background: #f8f9fa;\r\n    border-radius: 28rpx;\r\n    padding: 12rpx 16rpx;\r\n    border: 2rpx solid transparent;\r\n    transition: all 0.3s ease;\r\n    \r\n    &:focus-within {\r\n      border-color: #9c27b0;\r\n      background: white;\r\n      box-shadow: 0 0 0 8rpx rgba(156, 39, 176, 0.1);\r\n    }\r\n  }\r\n  \r\n  .extra-actions {\r\n    display: flex;\r\n    gap: 8rpx;\r\n  }\r\n  \r\n  .action-btn {\r\n    width: 56rpx;\r\n    height: 56rpx;\r\n    background: rgba(156, 39, 176, 0.1);\r\n    border-radius: 28rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.3s ease;\r\n    \r\n    &:active {\r\n      transform: scale(0.9);\r\n      background: rgba(156, 39, 176, 0.2);\r\n    }\r\n  }\r\n  \r\n  .action-icon {\r\n    width: 28rpx;\r\n    height: 28rpx;\r\n  }\r\n  \r\n  .text-input {\r\n    flex: 1;\r\n    min-height: 56rpx;\r\n    max-height: 200rpx;\r\n    font-size: 28rpx;\r\n    color: #333;\r\n    padding: 16rpx 12rpx;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    line-height: 1.4;\r\n  }\r\n  \r\n  .input-placeholder {\r\n    color: #999;\r\n  }\r\n  \r\n  .send-btn {\r\n    width: 56rpx;\r\n    height: 56rpx;\r\n    background: rgba(156, 39, 176, 0.3);\r\n    border-radius: 28rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.3s ease;\r\n    \r\n    &.send-btn-active {\r\n      background: linear-gradient(135deg, #9c27b0 0%, #ab47bc 100%);\r\n      box-shadow: 0 4rpx 16rpx rgba(156, 39, 176, 0.3);\r\n      \r\n      &:active {\r\n        transform: scale(0.9);\r\n      }\r\n    }\r\n  }\r\n  \r\n  .send-icon {\r\n    width: 28rpx;\r\n    height: 28rpx;\r\n  }\r\n  \r\n  .char-count {\r\n    text-align: right;\r\n    margin-top: 8rpx;\r\n  }\r\n  \r\n  .char-count-text {\r\n    font-size: 20rpx;\r\n    color: #999;\r\n  }\r\n  \r\n  // ========== 语音输入模态框样式 ==========\r\n  .voice-modal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.7);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 9999;\r\n  }\r\n  \r\n  .voice-content {\r\n    background: white;\r\n    border-radius: 32rpx;\r\n    padding: 64rpx 48rpx;\r\n    text-align: center;\r\n    min-width: 500rpx;\r\n  }\r\n  \r\n  .voice-animation {\r\n    position: relative;\r\n    width: 160rpx;\r\n    height: 160rpx;\r\n    margin: 0 auto 32rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .voice-circle {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 4rpx solid rgba(156, 39, 176, 0.3);\r\n    border-radius: 50%;\r\n    transition: all 0.3s ease;\r\n    \r\n    &.voice-active {\r\n      animation: voicePulse 1.5s infinite;\r\n    }\r\n  }\r\n  \r\n  @keyframes voicePulse {\r\n    0% {\r\n      transform: scale(1);\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      transform: scale(1.3);\r\n      opacity: 0;\r\n    }\r\n  }\r\n  \r\n  .voice-icon {\r\n    width: 80rpx;\r\n    height: 80rpx;\r\n    z-index: 1;\r\n  }\r\n  \r\n  .voice-text {\r\n    font-size: 28rpx;\r\n    color: #333;\r\n    margin-bottom: 48rpx;\r\n    display: block;\r\n  }\r\n  \r\n  .voice-actions {\r\n    display: flex;\r\n    gap: 24rpx;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .voice-cancel, .voice-confirm {\r\n    padding: 16rpx 32rpx;\r\n    border-radius: 24rpx;\r\n    font-size: 28rpx;\r\n    font-weight: 500;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .voice-cancel {\r\n    background: #f0f0f0;\r\n    color: #666;\r\n    \r\n    &:active {\r\n      background: #e0e0e0;\r\n    }\r\n  }\r\n  \r\n  .voice-confirm {\r\n    background: linear-gradient(135deg, #9c27b0 0%, #ab47bc 100%);\r\n    color: white;\r\n    \r\n    &:active {\r\n      transform: scale(0.95);\r\n    }\r\n  }\r\n  \r\n  // ========== 加载更多样式 ==========\r\n  .load-more-section {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 32rpx 0;\r\n  }\r\n  \r\n  .load-more-btn {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12rpx;\r\n    padding: 16rpx 24rpx;\r\n    background: rgba(156, 39, 176, 0.1);\r\n    border-radius: 24rpx;\r\n    transition: all 0.3s ease;\r\n    \r\n    &:active {\r\n      transform: scale(0.95);\r\n      background: rgba(156, 39, 176, 0.2);\r\n    }\r\n  }\r\n  \r\n  .load-more-icon {\r\n    width: 24rpx;\r\n    height: 24rpx;\r\n    animation: spin 1s linear infinite;\r\n  }\r\n  \r\n  .load-more-text {\r\n    font-size: 24rpx;\r\n    color: #9c27b0;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  @keyframes spin {\r\n    to { transform: rotate(360deg); }\r\n  }\r\n  </style>","import MiniProgramPage from 'D:/sitp项目/miniprogram/bird-frontend/pages/AIChat/AIChat.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","computed","uni","nextTick","aiMessage","onMounted","watch"],"mappings":"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"}