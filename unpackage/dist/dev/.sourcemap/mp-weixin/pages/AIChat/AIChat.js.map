{"version":3,"file":"AIChat.js","sources":["pages/AIChat/AIChat.vue","../../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvQUlDaGF0L0FJQ2hhdC52dWU"],"sourcesContent":["<template>\n    <view class=\"ai-chat-container\">\n      <!-- 自定义导航栏 -->\n      <view class=\"custom-navbar\">\n        <view class=\"navbar-left\" @click=\"goBack\">\n          <image :src=\"getOSSUrl('static/icons/back.png', 'icon')\" class=\"back-icon\" @error=\"onIconError\"></image>\n        </view>\n        <view class=\"navbar-center\">\n          <view class=\"ai-avatar-wrapper\">\n            <image :src=\"getOSSUrl('static/icons/ai-avatar.png', 'avatar')\" class=\"ai-avatar\" @error=\"onIconError\"></image>\n            <view \n              class=\"status-indicator\" \n              :class=\"{ 'status-online': isAIOnline, 'status-typing': isAITyping }\"\n            ></view>\n          </view>\n          <view class=\"ai-info\">\n            <text class=\"ai-name\">鸟类智能助手</text>\n            <text class=\"ai-status\">{{ getAIStatus() }}</text>\n          </view>\n        </view>\n        <view class=\"navbar-right\">\n          <view class=\"menu-btn\" @click=\"showMenu\">\n            <image :src=\"getOSSUrl('static/icons/menu.png', 'icon')\" class=\"menu-icon\" @error=\"onIconError\"></image>\n          </view>\n        </view>\n      </view>\n  \n      <!-- 消息列表 -->\n      <scroll-view \n        class=\"message-list\"\n        scroll-y\n        :scroll-top=\"scrollTop\"\n        :enable-back-to-top=\"true\"\n        :scroll-with-animation=\"true\"\n        @scrolltoupper=\"onScrollToUpper\"\n      >\n        <!-- 欢迎消息 -->\n        <view v-if=\"messageList.length === 0\" class=\"welcome-section\">\n          <view class=\"welcome-card\">\n            <image :src=\"getOSSUrl('static/icons/ai-welcome.png', 'large')\" class=\"welcome-icon\" @error=\"onIconError\"></image>\n            <text class=\"welcome-title\">欢迎来到鸟类智能助手！</text>\n            <text class=\"welcome-subtitle\">我可以帮助您解答关于鸟类的任何问题</text>\n            <view class=\"suggestion-buttons\">\n              <view \n                v-for=\"suggestion in quickSuggestions\" \n                :key=\"suggestion.id\"\n                class=\"suggestion-btn\"\n                @click=\"sendSuggestion(suggestion)\"\n              >\n                <image :src=\"getOSSUrl(suggestion.icon, 'icon')\" class=\"suggestion-icon\" @error=\"onIconError\"></image>\n                <text class=\"suggestion-text\">{{ suggestion.text }}</text>\n              </view>\n            </view>\n          </view>\n        </view>\n  \n        <!-- 消息项 -->\n        <view \n          v-for=\"(message, index) in messageList\" \n          :key=\"message.id\"\n          class=\"message-item\"\n          :class=\"{ 'message-user': message.type === 'user', 'message-ai': message.type === 'ai' }\"\n          :style=\"{ 'animation-delay': `${index * 0.1}s` }\"\n        >\n          <!-- AI消息 -->\n          <view v-if=\"message.type === 'ai'\" class=\"ai-message-wrapper\">\n            <image :src=\"getOSSUrl('static/icons/ai-avatar.png', 'avatar')\" class=\"message-avatar\" @error=\"onIconError\"></image>\n            <view class=\"message-content\">\n              <view class=\"message-bubble ai-bubble\">\n                <!-- 打字动画 -->\n                <view v-if=\"message.isTyping\" class=\"typing-indicator\">\n                  <view class=\"typing-dot\"></view>\n                  <view class=\"typing-dot\"></view>\n                  <view class=\"typing-dot\"></view>\n                </view>\n                <!-- 文本内容 -->\n                <rich-text \n                  v-else \n                  :nodes=\"formatMessageContent(message.content)\"\n                  class=\"message-text\"\n                ></rich-text>\n                <!-- 消息工具栏 -->\n                <view v-if=\"!message.isTyping\" class=\"message-toolbar\">\n                  <view class=\"toolbar-btn\" @click=\"copyMessage(message)\">\n                    <image :src=\"getOSSUrl('static/icons/copy.png', 'small-icon')\" class=\"toolbar-icon\" @error=\"onIconError\"></image>\n                  </view>\n                  <view class=\"toolbar-btn\" @click=\"likeMessage(message)\">\n                    <image \n                      :src=\"getOSSUrl(message.isLiked ? 'static/icons/like-filled.png' : 'static/icons/like.png', 'small-icon')\" \n                      class=\"toolbar-icon\"\n                      @error=\"onIconError\"\n                    ></image>\n                  </view>\n                  <view class=\"toolbar-btn\" @click=\"shareMessage(message)\">\n                    <image :src=\"getOSSUrl('static/icons/share.png', 'small-icon')\" class=\"toolbar-icon\" @error=\"onIconError\"></image>\n                  </view>\n                </view>\n              </view>\n              <text class=\"message-time\">{{ formatTime(message.timestamp) }}</text>\n            </view>\n          </view>\n  \n          <!-- 用户消息 -->\n          <view v-else class=\"user-message-wrapper\">\n            <view class=\"message-content\">\n              <view class=\"message-bubble user-bubble\">\n                <text class=\"message-text\">{{ message.content }}</text>\n              </view>\n              <text class=\"message-time\">{{ formatTime(message.timestamp) }}</text>\n            </view>\n            <image :src=\"getOSSUrl('static/icons/user-avatar.png', 'avatar')\" class=\"message-avatar\" @error=\"onIconError\"></image>\n          </view>\n        </view>\n  \n        <!-- 加载更多消息 -->\n        <view v-if=\"hasMoreMessages\" class=\"load-more-section\">\n          <view class=\"load-more-btn\" @click=\"loadMoreMessages\">\n            <image :src=\"getOSSUrl('static/icons/loading.png', 'small-icon')\" class=\"load-more-icon\" @error=\"onIconError\"></image>\n            <text class=\"load-more-text\">加载更多消息</text>\n          </view>\n        </view>\n      </scroll-view>\n  \n      <!-- 输入区域 -->\n      <view class=\"input-section\">\n        <!-- 快速回复 -->\n        <view v-if=\"quickReplies.length > 0\" class=\"quick-replies\">\n          <scroll-view class=\"quick-reply-scroll\" scroll-x>\n            <view class=\"quick-reply-container\">\n              <view \n                v-for=\"reply in quickReplies\" \n                :key=\"reply.id\"\n                class=\"quick-reply-item\"\n                @click=\"sendQuickReply(reply)\"\n              >\n                <text class=\"quick-reply-text\">{{ reply.text }}</text>\n              </view>\n            </view>\n          </scroll-view>\n        </view>\n  \n        <!-- 输入框区域 -->\n        <view class=\"input-wrapper\">\n          <view class=\"input-container\">\n            <view class=\"extra-actions\">\n              <view class=\"action-btn voice-btn\" @click=\"startVoiceInput\">\n                <image :src=\"getOSSUrl('static/icons/voice.png', 'icon')\" class=\"action-icon\" @error=\"onIconError\"></image>\n              </view>\n              <view class=\"action-btn image-btn\" @click=\"selectImage\">\n                <image :src=\"getOSSUrl('static/icons/image.png', 'icon')\" class=\"action-icon\" @error=\"onIconError\"></image>\n              </view>\n            </view>\n            \n            <textarea \n              v-model=\"inputText\"\n              placeholder=\"输入您想了解的鸟类问题...\"\n              placeholder-class=\"input-placeholder\"\n              class=\"text-input\"\n              :auto-height=\"true\"\n              :maxlength=\"500\"\n              @input=\"onInputChange\"\n              @focus=\"onInputFocus\"\n              @blur=\"onInputBlur\"\n              @confirm=\"sendMessage\"\n            ></textarea>\n            \n            <view \n              class=\"send-btn\"\n              :class=\"{ 'send-btn-active': canSend }\"\n              @click=\"sendMessage\"\n            >\n              <image \n                :src=\"getOSSUrl(canSend ? 'static/icons/send-active.png' : 'static/icons/send.png', 'icon')\" \n                class=\"send-icon\"\n                @error=\"onIconError\"\n              ></image>\n            </view>\n          </view>\n          \n          <!-- 字数统计 -->\n          <view v-if=\"inputText.length > 0\" class=\"char-count\">\n            <text class=\"char-count-text\">{{ inputText.length }}/500</text>\n          </view>\n        </view>\n      </view>\n  \n      <!-- 语音输入遮罩 -->\n      <view v-if=\"isVoiceRecording\" class=\"voice-modal\">\n        <view class=\"voice-content\">\n          <view class=\"voice-animation\">\n            <view class=\"voice-circle\" :class=\"{ 'voice-active': isRecording }\"></view>\n            <image :src=\"getOSSUrl('static/icons/microphone.png', 'large')\" class=\"voice-icon\" @error=\"onIconError\"></image>\n          </view>\n          <text class=\"voice-text\">{{ voiceText }}</text>\n          <view class=\"voice-actions\">\n            <view class=\"voice-cancel\" @click=\"cancelVoiceInput\">取消</view>\n            <view class=\"voice-confirm\" @click=\"confirmVoiceInput\">确认</view>\n          </view>\n        </view>\n      </view>\n    </view>\n  </template>\n  \n  <script setup>\n  import { ref, computed, onMounted, nextTick, watch } from 'vue';\n  \n  // ========== 响应式数据 ==========\n  const inputText = ref('');\n  const messageList = ref([]);\n  const isAIOnline = ref(true);\n  const isAITyping = ref(false);\n  const scrollTop = ref(0);\n  const hasMoreMessages = ref(false);\n  const isInputFocused = ref(false);\n  const isVoiceRecording = ref(false);\n  const isRecording = ref(false);\n  const voiceText = ref('正在录音...');\n  const quickReplies = ref([]);\n  \n  // ========== OSS配置 ==========\n  const ossConfig = {\n    baseUrl: 'https://birdfront-oss.oss-cn-shanghai.aliyuncs.com'\n  };\n  \n  // ========== OSS工具方法 ==========\n  /**\n   * 获取OSS图片URL\n   * @param {string} filename - 文件名\n   * @param {string} size - 尺寸类型\n   * @returns {string} 完整的OSS URL\n   */\n  const getOSSUrl = (filename, size = 'icon') => {\n    if (!filename) return '';\n    \n    // 确保文件名不以斜杠开头\n    const cleanFilename = filename.startsWith('/') ? filename.slice(1) : filename;\n    \n    // 根据尺寸类型设置不同的处理参数\n    let params = '';\n    switch(size) {\n      case 'icon':\n        params = '?x-oss-process=image/resize,m_lfit,w_48,h_48/quality,q_90';\n        break;\n      case 'small-icon':\n        params = '?x-oss-process=image/resize,m_lfit,w_32,h_32/quality,q_90';\n        break;\n      case 'avatar':\n        params = '?x-oss-process=image/resize,m_lfit,w_80,h_80/quality,q_90';\n        break;\n      case 'large':\n        params = '?x-oss-process=image/resize,m_lfit,w_120,h_120/quality,q_90';\n        break;\n      case 'medium':\n        params = '?x-oss-process=image/resize,m_lfit,w_60,h_60/quality,q_90';\n        break;\n      default:\n        params = '?x-oss-process=image/resize,m_lfit,w_48,h_48/quality,q_90';\n    }\n    \n    return `${ossConfig.baseUrl}/${cleanFilename}${params}`;\n  };\n  \n  // ========== 快速建议数据 ==========\n  const quickSuggestions = ref([\n    {\n      id: 1,\n      text: '鸟类识别',\n      icon: 'static/icons/identify.png'\n    },\n    {\n      id: 2,\n      text: '鸟类习性',\n      icon: 'static/icons/behavior.png'\n    },\n    {\n      id: 3,\n      text: '观鸟指南',\n      icon: 'static/icons/guide.png'\n    },\n    {\n      id: 4,\n      text: '保护知识',\n      icon: 'static/icons/protection.png'\n    }\n  ]);\n  \n  // ========== 计算属性 ==========\n  \n  /**\n   * 是否可以发送消息\n   */\n  const canSend = computed(() => {\n    return inputText.value.trim().length > 0 && !isAITyping.value;\n  });\n  \n  // ========== 事件处理函数 ==========\n  \n  /**\n   * 返回上一页\n   */\n  const goBack = () => {\n    uni.navigateBack();\n  };\n  \n  /**\n   * 显示菜单\n   */\n  const showMenu = () => {\n    uni.showActionSheet({\n      itemList: ['清空聊天记录', '导出聊天记录', '设置'],\n      success: (res) => {\n        switch (res.tapIndex) {\n          case 0:\n            clearChatHistory();\n            break;\n          case 1:\n            exportChatHistory();\n            break;\n          case 2:\n            openSettings();\n            break;\n        }\n      }\n    });\n  };\n  \n  /**\n   * 获取AI状态文本\n   */\n  const getAIStatus = () => {\n    if (isAITyping.value) return '正在输入...';\n    if (isAIOnline.value) return '在线';\n    return '离线';\n  };\n  \n  /**\n   * 输入变化处理\n   */\n  const onInputChange = () => {\n    // 可以在这里实现实时搜索建议等功能\n  };\n  \n  /**\n   * 输入框聚焦\n   */\n  const onInputFocus = () => {\n    isInputFocused.value = true;\n    scrollToBottom();\n  };\n  \n  /**\n   * 输入框失焦\n   */\n  const onInputBlur = () => {\n    isInputFocused.value = false;\n  };\n  \n  /**\n   * 滚动到顶部加载更多\n   */\n  const onScrollToUpper = () => {\n    if (hasMoreMessages.value) {\n      loadMoreMessages();\n    }\n  };\n  \n  /**\n   * 发送消息\n   */\n  const sendMessage = async () => {\n    if (!canSend.value) return;\n    \n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputText.value.trim(),\n      timestamp: new Date()\n    };\n    \n    // 添加用户消息\n    messageList.value.push(userMessage);\n    \n    // 清空输入框\n    const currentInput = inputText.value.trim();\n    inputText.value = '';\n    \n    // 滚动到底部\n    await nextTick();\n    scrollToBottom();\n    \n    // 发送到AI\n    await sendToAI(currentInput);\n  };\n  \n  /**\n   * 发送快速建议\n   */\n  const sendSuggestion = (suggestion) => {\n    inputText.value = suggestion.text;\n    sendMessage();\n  };\n  \n  /**\n   * 发送快速回复\n   */\n  const sendQuickReply = (reply) => {\n    inputText.value = reply.text;\n    sendMessage();\n  };\n  \n  /**\n   * 开始语音输入\n   */\n  const startVoiceInput = () => {\n    isVoiceRecording.value = true;\n    isRecording.value = true;\n    voiceText.value = '正在录音...';\n    \n    // TODO: 实现语音录音功能\n    // uni.startRecord({\n    //   success: (res) => {\n    //     // 处理录音结果\n    //   }\n    // });\n  };\n  \n  /**\n   * 取消语音输入\n   */\n  const cancelVoiceInput = () => {\n    isVoiceRecording.value = false;\n    isRecording.value = false;\n  };\n  \n  /**\n   * 确认语音输入\n   */\n  const confirmVoiceInput = () => {\n    isVoiceRecording.value = false;\n    isRecording.value = false;\n    \n    // TODO: 处理语音识别结果\n    // inputText.value = voiceResult;\n  };\n  \n  /**\n   * 选择图片\n   */\n  const selectImage = () => {\n    uni.chooseImage({\n      count: 1,\n      sizeType: ['original', 'compressed'],\n      sourceType: ['album', 'camera'],\n      success: (res) => {\n        // TODO: 处理图片识别\n        handleImageRecognition(res.tempFilePaths[0]);\n      }\n    });\n  };\n  \n  /**\n   * 复制消息\n   */\n  const copyMessage = (message) => {\n    uni.setClipboardData({\n      data: message.content,\n      success: () => {\n        uni.showToast({\n          title: '已复制',\n          icon: 'success'\n        });\n      }\n    });\n  };\n  \n  /**\n   * 点赞消息\n   */\n  const likeMessage = (message) => {\n    message.isLiked = !message.isLiked;\n    uni.vibrateShort();\n  };\n  \n  /**\n   * 分享消息\n   */\n  const shareMessage = (message) => {\n    uni.showShareMenu({\n      title: '分享AI回答',\n      path: '/pages/AIChat/AIChat'\n    });\n  };\n  \n  // ========== 业务逻辑函数 ==========\n  \n  /**\n   * 发送消息给AI\n   * @param {String} message - 用户消息\n   */\n  const sendToAI = async (message) => {\n    try {\n      // 添加AI打字状态\n      const aiMessage = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: '',\n        timestamp: new Date(),\n        isTyping: true\n      };\n      \n      messageList.value.push(aiMessage);\n      isAITyping.value = true;\n      \n      await nextTick();\n      scrollToBottom();\n      \n      // TODO: 调用实际的AI API\n      // const response = await aiAPI.chat({\n      //   message: message,\n      //   context: getConversationContext()\n      // });\n      \n      // 模拟AI响应延迟\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      // 模拟AI回复\n      const aiResponse = await generateAIResponse(message);\n      \n      // 更新AI消息\n      const aiMessageIndex = messageList.value.findIndex(msg => msg.id === aiMessage.id);\n      if (aiMessageIndex !== -1) {\n        messageList.value[aiMessageIndex].content = aiResponse;\n        messageList.value[aiMessageIndex].isTyping = false;\n        isAITyping.value = false;\n      }\n      \n      // 生成快速回复建议\n      generateQuickReplies(aiResponse);\n      \n      await nextTick();\n      scrollToBottom();\n      \n    } catch (error) {\n      console.error('AI响应失败:', error);\n      \n      // 移除打字状态的消息\n      const aiMessageIndex = messageList.value.findIndex(msg => msg.id === aiMessage.id);\n      if (aiMessageIndex !== -1) {\n        messageList.value.splice(aiMessageIndex, 1);\n      }\n      \n      isAITyping.value = false;\n      \n      uni.showToast({\n        title: 'AI响应失败，请重试',\n        icon: 'error'\n      });\n    }\n  };\n  \n  /**\n   * 生成AI回复（模拟）\n   * @param {String} userMessage - 用户消息\n   * @returns {String} AI回复\n   */\n  const generateAIResponse = async (userMessage) => {\n    // 简单的关键词匹配回复（实际项目中应该调用真实的AI API）\n    const responses = {\n      '鸟类识别': '我可以帮您识别鸟类！请描述一下鸟的特征，比如大小、颜色、叫声等，或者您可以上传照片让我来识别。',\n      '鸟类习性': '不同鸟类有着各自独特的习性。您想了解哪种鸟类的习性呢？比如觅食习惯、繁殖行为、迁徙路线等。',\n      '观鸟指南': '观鸟是一项很有趣的活动！建议选择清晨或傍晚时间，准备好双筒望远镜，选择公园、湿地等鸟类活动频繁的地方。保持安静，避免惊扰鸟类。',\n      '保护知识': '鸟类保护非常重要。我们可以通过保护栖息地、减少污染、不干扰繁殖等方式来保护鸟类。您想了解具体哪个方面的保护知识呢？'\n    };\n    \n    // 查找匹配的关键词\n    for (const [keyword, response] of Object.entries(responses)) {\n      if (userMessage.includes(keyword)) {\n        return response;\n      }\n    }\n    \n    // 默认回复\n    return '这是一个很好的问题！作为鸟类专家，我很乐意为您解答。您能提供更多具体信息吗？这样我可以给出更准确的回答。';\n  };\n  \n  /**\n   * 生成快速回复建议\n   * @param {String} aiResponse - AI回复内容\n   */\n  const generateQuickReplies = (aiResponse) => {\n    const defaultReplies = [\n      { id: 1, text: '告诉我更多' },\n      { id: 2, text: '有相关图片吗？' },\n      { id: 3, text: '谢谢' }\n    ];\n    \n    // 根据AI回复内容生成个性化建议（简化版）\n    if (aiResponse.includes('识别')) {\n      quickReplies.value = [\n        { id: 1, text: '上传照片识别' },\n        { id: 2, text: '描述特征识别' },\n        { id: 3, text: '常见鸟类有哪些？' }\n      ];\n    } else if (aiResponse.includes('保护')) {\n      quickReplies.value = [\n        { id: 1, text: '如何参与保护？' },\n        { id: 2, text: '濒危鸟类有哪些？' },\n        { id: 3, text: '保护法律法规' }\n      ];\n    } else {\n      quickReplies.value = defaultReplies;\n    }\n    \n    // 3秒后自动隐藏快速回复\n    setTimeout(() => {\n      quickReplies.value = [];\n    }, 3000);\n  };\n  \n  /**\n   * 处理图片识别\n   * @param {String} imagePath - 图片路径\n   */\n  const handleImageRecognition = async (imagePath) => {\n    try {\n      uni.showLoading({ title: '识别中...' });\n      \n      // TODO: 调用图片识别API\n      // const result = await imageRecognitionAPI.identify(imagePath);\n      \n      // 模拟识别延迟\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      uni.hideLoading();\n      \n      // 模拟识别结果\n      const recognitionResult = '根据图片分析，这可能是一只麻雀。麻雀是常见的小型鸟类，体长约14-15厘米...';\n      \n      // 发送识别结果消息\n      const aiMessage = {\n        id: Date.now(),\n        type: 'ai',\n        content: `图片识别结果：\\n\\n${recognitionResult}`,\n        timestamp: new Date(),\n        isTyping: false\n      };\n      \n      messageList.value.push(aiMessage);\n      await nextTick();\n      scrollToBottom();\n      \n    } catch (error) {\n      uni.hideLoading();\n      console.error('图片识别失败:', error);\n      uni.showToast({\n        title: '识别失败，请重试',\n        icon: 'error'\n      });\n    }\n  };\n  \n  /**\n   * 滚动到底部\n   */\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      scrollTop.value = 99999;\n    }, 100);\n  };\n  \n  /**\n   * 格式化消息内容\n   * @param {String} content - 消息内容\n   * @returns {Array} 富文本节点数组\n   */\n  const formatMessageContent = (content) => {\n    // 简单的富文本格式化（可以扩展支持更多格式）\n    return content.split('\\n').map(line => ({\n      name: 'div',\n      children: [{ type: 'text', text: line }]\n    }));\n  };\n  \n  /**\n   * 格式化时间\n   * @param {Date} timestamp - 时间戳\n   * @returns {String} 格式化的时间字符串\n   */\n  const formatTime = (timestamp) => {\n    const now = new Date();\n    const date = new Date(timestamp);\n    const diff = now - date;\n    \n    if (diff < 60000) { // 1分钟内\n      return '刚刚';\n    } else if (diff < 3600000) { // 1小时内\n      return `${Math.floor(diff / 60000)}分钟前`;\n    } else if (diff < 86400000) { // 1天内\n      return `${Math.floor(diff / 3600000)}小时前`;\n    } else {\n      return `${date.getMonth() + 1}/${date.getDate()} ${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\n    }\n  };\n  \n  /**\n   * 加载更多消息\n   */\n  const loadMoreMessages = async () => {\n    try {\n      // TODO: 实现历史消息加载\n      console.log('加载更多消息');\n    } catch (error) {\n      console.error('加载更多消息失败:', error);\n    }\n  };\n  \n  /**\n   * 清空聊天记录\n   */\n  const clearChatHistory = () => {\n    uni.showModal({\n      title: '确认清空',\n      content: '确定要清空所有聊天记录吗？',\n      success: (res) => {\n        if (res.confirm) {\n          messageList.value = [];\n          uni.showToast({\n            title: '已清空',\n            icon: 'success'\n          });\n        }\n      }\n    });\n  };\n  \n  /**\n   * 导出聊天记录\n   */\n  const exportChatHistory = () => {\n    // TODO: 实现聊天记录导出功能\n    uni.showToast({\n      title: '导出功能开发中',\n      icon: 'none'\n    });\n  };\n  \n  /**\n   * 打开设置\n   */\n  const openSettings = () => {\n    // TODO: 跳转到设置页面\n    uni.navigateTo({\n      url: '/pages/ChatSettings/ChatSettings'\n    });\n  };\n  \n  /**\n   * 获取会话上下文\n   */\n  const getConversationContext = () => {\n    // 返回最近的几条消息作为上下文\n    return messageList.value.slice(-10).map(msg => ({\n      role: msg.type === 'user' ? 'user' : 'assistant',\n      content: msg.content\n    }));\n  };\n  \n  /**\n   * 图标加载失败处理\n   * @param {Event} error - 错误事件\n   */\n  const onIconError = (error) => {\n    console.warn('图标加载失败:', error);\n    // 可以设置默认图标或其他降级处理\n  };\n  \n  // ========== 生命周期 ==========\n  onMounted(() => {\n    // 初始化聊天界面\n    console.log('AI聊天页面初始化');\n    \n    // 设置AI在线状态\n    isAIOnline.value = true;\n  });\n  \n  // ========== 监听器 ==========\n  watch(messageList, () => {\n    // 消息列表变化时自动滚动到底部\n    nextTick(() => {\n      scrollToBottom();\n    });\n  }, { deep: true });\n  </script>\n  \n  <style lang=\"scss\" scoped>\n  // ========== 主容器样式 ==========\n  .ai-chat-container {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    background: linear-gradient(180deg, #f8fffe 0%, #ffffff 100%);\n  }\n  \n  // ========== 自定义导航栏样式 ==========\n  .custom-navbar {\n    height: 88rpx;\n    background: linear-gradient(135deg, #9c27b0 0%, #ab47bc 100%);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 32rpx;\n    padding-top: var(--status-bar-height, 0);\n    position: sticky;\n    top: 0;\n    z-index: 1000;\n    box-shadow: 0 2rpx 16rpx rgba(156, 39, 176, 0.2);\n  }\n  \n  .navbar-left, .navbar-right {\n    width: 80rpx;\n    height: 60rpx;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .back-icon, .menu-icon {\n    width: 36rpx;\n    height: 36rpx;\n  }\n  \n  .navbar-center {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    gap: 16rpx;\n  }\n  \n  .ai-avatar-wrapper {\n    position: relative;\n  }\n  \n  .ai-avatar {\n    width: 60rpx;\n    height: 60rpx;\n    border-radius: 30rpx;\n    border: 3rpx solid rgba(255, 255, 255, 0.3);\n  }\n  \n  .status-indicator {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 20rpx;\n    height: 20rpx;\n    border-radius: 50%;\n    border: 3rpx solid white;\n    background: #666;\n    \n    &.status-online {\n      background: #4caf50;\n    }\n    \n    &.status-typing {\n      background: #ff9800;\n      animation: pulse 1.5s infinite;\n    }\n  }\n  \n  @keyframes pulse {\n    0%, 100% { transform: scale(1); }\n    50% { transform: scale(1.2); }\n  }\n  \n  .ai-info {\n    flex: 1;\n  }\n  \n  .ai-name {\n    display: block;\n    font-size: 28rpx;\n    font-weight: 600;\n    color: white;\n    margin-bottom: 4rpx;\n  }\n  \n  .ai-status {\n    display: block;\n    font-size: 20rpx;\n    color: rgba(255, 255, 255, 0.8);\n  }\n  \n  // ========== 消息列表样式 ==========\n  .message-list {\n    flex: 1;\n    padding: 24rpx 32rpx;\n    overflow-y: auto;\n  }\n  \n  .welcome-section {\n    display: flex;\n    justify-content: center;\n    padding: 80rpx 0;\n  }\n  \n  .welcome-card {\n    background: white;\n    border-radius: 32rpx;\n    padding: 48rpx 32rpx;\n    text-align: center;\n    box-shadow: 0 8rpx 32rpx rgba(0, 0, 0, 0.08);\n    max-width: 500rpx;\n  }\n  \n  .welcome-icon {\n    width: 120rpx;\n    height: 120rpx;\n    margin-bottom: 24rpx;\n  }\n  \n  .welcome-title {\n    display: block;\n    font-size: 32rpx;\n    font-weight: 600;\n    color: #333;\n    margin-bottom: 12rpx;\n  }\n  \n  .welcome-subtitle {\n    display: block;\n    font-size: 26rpx;\n    color: #666;\n    margin-bottom: 32rpx;\n    line-height: 1.5;\n  }\n  \n  .suggestion-buttons {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 16rpx;\n  }\n  \n  .suggestion-btn {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8rpx;\n    padding: 20rpx 16rpx;\n    background: linear-gradient(135deg, #f3e5f5 0%, #fce4ec 100%);\n    border-radius: 20rpx;\n    border: 2rpx solid rgba(156, 39, 176, 0.1);\n    transition: all 0.3s ease;\n    \n    &:active {\n      transform: scale(0.95);\n      background: linear-gradient(135deg, #e1bee7 0%, #f8bbd9 100%);\n    }\n  }\n  \n  .suggestion-icon {\n    width: 32rpx;\n    height: 32rpx;\n  }\n  \n  .suggestion-text {\n    font-size: 22rpx;\n    color: #9c27b0;\n    font-weight: 500;\n  }\n  \n  .message-item {\n    margin-bottom: 32rpx;\n    animation: fadeInUp 0.5s ease both;\n    \n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  \n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(20rpx);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  .ai-message-wrapper {\n    display: flex;\n    align-items: flex-start;\n    gap: 16rpx;\n  }\n  \n  .user-message-wrapper {\n    display: flex;\n    align-items: flex-start;\n    gap: 16rpx;\n    flex-direction: row-reverse;\n  }\n  \n  .message-avatar {\n    width: 64rpx;\n    height: 64rpx;\n    border-radius: 32rpx;\n    flex-shrink: 0;\n  }\n  \n  .message-content {\n    flex: 1;\n    max-width: calc(100% - 80rpx);\n  }\n  \n  .message-bubble {\n    padding: 20rpx 24rpx;\n    border-radius: 24rpx;\n    margin-bottom: 8rpx;\n    position: relative;\n    word-wrap: break-word;\n  }\n  \n  .ai-bubble {\n    background: white;\n    border: 2rpx solid rgba(156, 39, 176, 0.1);\n    border-bottom-left-radius: 8rpx;\n    box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\n  }\n  \n  .user-bubble {\n    background: linear-gradient(135deg, #9c27b0 0%, #ab47bc 100%);\n    color: white;\n    border-bottom-right-radius: 8rpx;\n    align-self: flex-end;\n  }\n  \n  .message-text {\n    font-size: 28rpx;\n    line-height: 1.6;\n    color: #333;\n  }\n  \n  .user-bubble .message-text {\n    color: white;\n  }\n  \n  .message-time {\n    font-size: 20rpx;\n    color: #999;\n    margin-left: 24rpx;\n  }\n  \n  .user-message-wrapper .message-time {\n    text-align: right;\n    margin-left: 0;\n    margin-right: 24rpx;\n  }\n  \n  // ========== 打字动画样式 ==========\n  .typing-indicator {\n    display: flex;\n    align-items: center;\n    gap: 8rpx;\n    padding: 8rpx 0;\n  }\n  \n  .typing-dot {\n    width: 12rpx;\n    height: 12rpx;\n    background: #9c27b0;\n    border-radius: 50%;\n    animation: typingDot 1.4s infinite ease-in-out;\n    \n    &:nth-child(1) { animation-delay: -0.32s; }\n    &:nth-child(2) { animation-delay: -0.16s; }\n    &:nth-child(3) { animation-delay: 0s; }\n  }\n  \n  @keyframes typingDot {\n    0%, 80%, 100% {\n      transform: scale(0.8);\n      opacity: 0.5;\n    }\n    40% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n  \n  // ========== 消息工具栏样式 ==========\n  .message-toolbar {\n    display: flex;\n    gap: 8rpx;\n    margin-top: 12rpx;\n    opacity: 0.7;\n    transition: opacity 0.3s ease;\n  }\n  \n  .ai-bubble:hover .message-toolbar {\n    opacity: 1;\n  }\n  \n  .toolbar-btn {\n    width: 48rpx;\n    height: 48rpx;\n    background: rgba(156, 39, 176, 0.1);\n    border-radius: 24rpx;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.3s ease;\n    \n    &:active {\n      transform: scale(0.9);\n      background: rgba(156, 39, 176, 0.2);\n    }\n  }\n  \n  .toolbar-icon {\n    width: 24rpx;\n    height: 24rpx;\n  }\n  \n  // ========== 快速回复样式 ==========\n  .quick-replies {\n    padding: 16rpx 0;\n    border-bottom: 1rpx solid #f0f0f0;\n  }\n  \n  .quick-reply-scroll {\n    white-space: nowrap;\n  }\n  \n  .quick-reply-container {\n    display: inline-flex;\n    gap: 12rpx;\n    padding: 0 32rpx;\n  }\n  \n  .quick-reply-item {\n    display: inline-block;\n    padding: 12rpx 20rpx;\n    background: rgba(156, 39, 176, 0.1);\n    border: 2rpx solid rgba(156, 39, 176, 0.2);\n    border-radius: 20rpx;\n    white-space: nowrap;\n    transition: all 0.3s ease;\n    \n    &:active {\n      transform: scale(0.95);\n      background: rgba(156, 39, 176, 0.2);\n    }\n  }\n  \n  .quick-reply-text {\n    font-size: 24rpx;\n    color: #9c27b0;\n    font-weight: 500;\n  }\n  \n  // ========== 输入区域样式 ==========\n  .input-section {\n    background: white;\n    border-top: 1rpx solid #f0f0f0;\n    padding: 16rpx 32rpx;\n    padding-bottom: calc(16rpx + env(safe-area-inset-bottom));\n  }\n  \n  .input-wrapper {\n    position: relative;\n  }\n  \n  .input-container {\n    display: flex;\n    align-items: flex-end;\n    gap: 16rpx;\n    background: #f8f9fa;\n    border-radius: 28rpx;\n    padding: 12rpx 16rpx;\n    border: 2rpx solid transparent;\n    transition: all 0.3s ease;\n    \n    &:focus-within {\n      border-color: #9c27b0;\n      background: white;\n      box-shadow: 0 0 0 8rpx rgba(156, 39, 176, 0.1);\n    }\n  }\n  \n  .extra-actions {\n    display: flex;\n    gap: 8rpx;\n  }\n  \n  .action-btn {\n    width: 56rpx;\n    height: 56rpx;\n    background: rgba(156, 39, 176, 0.1);\n    border-radius: 28rpx;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.3s ease;\n    \n    &:active {\n      transform: scale(0.9);\n      background: rgba(156, 39, 176, 0.2);\n    }\n  }\n  \n  .action-icon {\n    width: 28rpx;\n    height: 28rpx;\n  }\n  \n  .text-input {\n    flex: 1;\n    min-height: 56rpx;\n    max-height: 200rpx;\n    font-size: 28rpx;\n    color: #333;\n    padding: 16rpx 12rpx;\n    background: transparent;\n    border: none;\n    outline: none;\n    line-height: 1.4;\n  }\n  \n  .input-placeholder {\n    color: #999;\n  }\n  \n  .send-btn {\n    width: 56rpx;\n    height: 56rpx;\n    background: rgba(156, 39, 176, 0.3);\n    border-radius: 28rpx;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.3s ease;\n    \n    &.send-btn-active {\n      background: linear-gradient(135deg, #9c27b0 0%, #ab47bc 100%);\n      box-shadow: 0 4rpx 16rpx rgba(156, 39, 176, 0.3);\n      \n      &:active {\n        transform: scale(0.9);\n      }\n    }\n  }\n  \n  .send-icon {\n    width: 28rpx;\n    height: 28rpx;\n  }\n  \n  .char-count {\n    text-align: right;\n    margin-top: 8rpx;\n  }\n  \n  .char-count-text {\n    font-size: 20rpx;\n    color: #999;\n  }\n  \n  // ========== 语音输入模态框样式 ==========\n  .voice-modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 9999;\n  }\n  \n  .voice-content {\n    background: white;\n    border-radius: 32rpx;\n    padding: 64rpx 48rpx;\n    text-align: center;\n    min-width: 500rpx;\n  }\n  \n  .voice-animation {\n    position: relative;\n    width: 160rpx;\n    height: 160rpx;\n    margin: 0 auto 32rpx;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .voice-circle {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border: 4rpx solid rgba(156, 39, 176, 0.3);\n    border-radius: 50%;\n    transition: all 0.3s ease;\n    \n    &.voice-active {\n      animation: voicePulse 1.5s infinite;\n    }\n  }\n  \n  @keyframes voicePulse {\n    0% {\n      transform: scale(1);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1.3);\n      opacity: 0;\n    }\n  }\n  \n  .voice-icon {\n    width: 80rpx;\n    height: 80rpx;\n    z-index: 1;\n  }\n  \n  .voice-text {\n    font-size: 28rpx;\n    color: #333;\n    margin-bottom: 48rpx;\n    display: block;\n  }\n  \n  .voice-actions {\n    display: flex;\n    gap: 24rpx;\n    justify-content: center;\n  }\n  \n  .voice-cancel, .voice-confirm {\n    padding: 16rpx 32rpx;\n    border-radius: 24rpx;\n    font-size: 28rpx;\n    font-weight: 500;\n    transition: all 0.3s ease;\n  }\n  \n  .voice-cancel {\n    background: #f0f0f0;\n    color: #666;\n    \n    &:active {\n      background: #e0e0e0;\n    }\n  }\n  \n  .voice-confirm {\n    background: linear-gradient(135deg, #9c27b0 0%, #ab47bc 100%);\n    color: white;\n    \n    &:active {\n      transform: scale(0.95);\n    }\n  }\n  \n  // ========== 加载更多样式 ==========\n  .load-more-section {\n    display: flex;\n    justify-content: center;\n    padding: 32rpx 0;\n  }\n  \n  .load-more-btn {\n    display: flex;\n    align-items: center;\n    gap: 12rpx;\n    padding: 16rpx 24rpx;\n    background: rgba(156, 39, 176, 0.1);\n    border-radius: 24rpx;\n    transition: all 0.3s ease;\n    \n    &:active {\n      transform: scale(0.95);\n      background: rgba(156, 39, 176, 0.2);\n    }\n  }\n  \n  .load-more-icon {\n    width: 24rpx;\n    height: 24rpx;\n    animation: spin 1s linear infinite;\n  }\n  \n  .load-more-text {\n    font-size: 24rpx;\n    color: #9c27b0;\n    font-weight: 500;\n  }\n  \n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n  </style>","import MiniProgramPage from 'D:/sitp项目/miniprogram/bird-frontend/pages/AIChat/AIChat.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","computed","uni","nextTick","aiMessage","onMounted","watch"],"mappings":"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"}