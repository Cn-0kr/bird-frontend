{"version":3,"file":"api.js","sources":["config/api.js"],"sourcesContent":["/**\r\n * API配置文件\r\n * 统一管理所有API相关的配置\r\n */\r\n\r\n// 环境配置\r\nconst ENV = {\r\n    // 开发环境\r\n    development: {\r\n      BASE_URL: 'https://dev-api.birdapp.com',\r\n      BIRD_API: 'https://dev-api.birdapp.com/api/v1/birds',\r\n      USER_API: 'https://dev-api.birdapp.com/api/v1/users',\r\n      UPLOAD_API: 'https://dev-api.birdapp.com/api/v1/upload',\r\n      WEBSOCKET_URL: 'wss://dev-ws.birdapp.com'\r\n    },\r\n    // 测试环境\r\n    testing: {\r\n      BASE_URL: 'https://test-api.birdapp.com',\r\n      BIRD_API: 'https://test-api.birdapp.com/api/v1/birds',\r\n      USER_API: 'https://test-api.birdapp.com/api/v1/users',\r\n      UPLOAD_API: 'https://test-api.birdapp.com/api/v1/upload',\r\n      WEBSOCKET_URL: 'wss://test-ws.birdapp.com'\r\n    },\r\n    // 生产环境\r\n    production: {\r\n      BASE_URL: 'https://api.birdapp.com',\r\n      BIRD_API: 'https://api.birdapp.com/api/v1/birds',\r\n      USER_API: 'https://api.birdapp.com/api/v1/users',\r\n      UPLOAD_API: 'https://api.birdapp.com/api/v1/upload',\r\n      WEBSOCKET_URL: 'wss://ws.birdapp.com'\r\n    }\r\n  };\r\n  \r\n  // 当前环境 (可以通过构建工具动态设置)\r\n  const CURRENT_ENV = process.env.NODE_ENV || 'development';\r\n  \r\n  // API基础配置\r\n  export const API_CONFIG = {\r\n    // 基础URL\r\n    ...ENV[CURRENT_ENV],\r\n    \r\n    // 请求超时时间 (毫秒)\r\n    TIMEOUT: 10000,\r\n    \r\n    // 重试次数\r\n    RETRY_COUNT: 3,\r\n    \r\n    // 重试延迟 (毫秒)\r\n    RETRY_DELAY: 1000,\r\n    \r\n    // 文件上传配置\r\n    UPLOAD: {\r\n      // 最大文件大小 (MB)\r\n      MAX_FILE_SIZE: 50,\r\n      // 支持的图片格式\r\n      ALLOWED_IMAGE_TYPES: ['jpg', 'jpeg', 'png', 'webp', 'gif'],\r\n      // 支持的音频格式\r\n      ALLOWED_AUDIO_TYPES: ['mp3', 'wav', 'aac', 'm4a'],\r\n      // 支持的视频格式\r\n      ALLOWED_VIDEO_TYPES: ['mp4', 'mov', 'avi'],\r\n      // 上传超时时间 (毫秒)\r\n      UPLOAD_TIMEOUT: 30000\r\n    },\r\n    \r\n    // 分页配置\r\n    PAGINATION: {\r\n      // 默认页码\r\n      DEFAULT_PAGE: 1,\r\n      // 默认每页数量\r\n      DEFAULT_SIZE: 20,\r\n      // 最大每页数量\r\n      MAX_SIZE: 100\r\n    },\r\n    \r\n    // 缓存配置\r\n    CACHE: {\r\n      // 缓存前缀\r\n      PREFIX: 'bird_app_',\r\n      // 默认缓存时间 (秒)\r\n      DEFAULT_TTL: 300,\r\n      // 图片缓存时间 (秒)\r\n      IMAGE_TTL: 3600,\r\n      // 用户信息缓存时间 (秒)\r\n      USER_TTL: 1800\r\n    },\r\n    \r\n    // API版本\r\n    API_VERSION: 'v1',\r\n    \r\n    // 请求头配置\r\n    HEADERS: {\r\n      'Content-Type': 'application/json',\r\n      'X-Client-Type': 'uniapp',\r\n      'X-Client-Version': '1.0.0'\r\n    }\r\n  };\r\n  \r\n  // 状态码配置\r\n  export const STATUS_CODES = {\r\n    // 成功\r\n    SUCCESS: 200,\r\n    // 创建成功\r\n    CREATED: 201,\r\n    // 无内容\r\n    NO_CONTENT: 204,\r\n    // 请求错误\r\n    BAD_REQUEST: 400,\r\n    // 未授权\r\n    UNAUTHORIZED: 401,\r\n    // 禁止访问\r\n    FORBIDDEN: 403,\r\n    // 未找到\r\n    NOT_FOUND: 404,\r\n    // 方法不允许\r\n    METHOD_NOT_ALLOWED: 405,\r\n    // 请求超时\r\n    REQUEST_TIMEOUT: 408,\r\n    // 冲突\r\n    CONFLICT: 409,\r\n    // 请求实体过大\r\n    PAYLOAD_TOO_LARGE: 413,\r\n    // 请求频率过高\r\n    TOO_MANY_REQUESTS: 429,\r\n    // 服务器内部错误\r\n    INTERNAL_SERVER_ERROR: 500,\r\n    // 服务不可用\r\n    SERVICE_UNAVAILABLE: 503,\r\n    // 网关超时\r\n    GATEWAY_TIMEOUT: 504\r\n  };\r\n  \r\n  // 错误信息配置\r\n  export const ERROR_MESSAGES = {\r\n    [STATUS_CODES.BAD_REQUEST]: '请求参数错误',\r\n    [STATUS_CODES.UNAUTHORIZED]: '请先登录',\r\n    [STATUS_CODES.FORBIDDEN]: '没有访问权限',\r\n    [STATUS_CODES.NOT_FOUND]: '请求的资源不存在',\r\n    [STATUS_CODES.METHOD_NOT_ALLOWED]: '请求方法不允许',\r\n    [STATUS_CODES.REQUEST_TIMEOUT]: '请求超时，请稍后重试',\r\n    [STATUS_CODES.CONFLICT]: '请求冲突',\r\n    [STATUS_CODES.PAYLOAD_TOO_LARGE]: '文件过大',\r\n    [STATUS_CODES.TOO_MANY_REQUESTS]: '请求过于频繁，请稍后重试',\r\n    [STATUS_CODES.INTERNAL_SERVER_ERROR]: '服务器内部错误',\r\n    [STATUS_CODES.SERVICE_UNAVAILABLE]: '服务暂时不可用',\r\n    [STATUS_CODES.GATEWAY_TIMEOUT]: '网关超时',\r\n    \r\n    // 网络错误\r\n    NETWORK_ERROR: '网络连接失败，请检查网络设置',\r\n    TIMEOUT_ERROR: '网络超时，请稍后重试',\r\n    UPLOAD_ERROR: '文件上传失败，请重试',\r\n    DOWNLOAD_ERROR: '文件下载失败，请重试',\r\n    \r\n    // 业务错误\r\n    INVALID_TOKEN: '登录状态已过期，请重新登录',\r\n    INVALID_PARAMS: '参数格式不正确',\r\n    OPERATION_FAILED: '操作失败，请重试',\r\n    DATA_NOT_FOUND: '数据不存在',\r\n    DUPLICATE_DATA: '数据已存在',\r\n    \r\n    // 默认错误\r\n    UNKNOWN_ERROR: '未知错误，请联系客服'\r\n  };\r\n  \r\n  // API端点配置\r\n  export const API_ENDPOINTS = {\r\n    // 用户相关\r\n    USER: {\r\n      LOGIN: '/auth/login',\r\n      LOGOUT: '/auth/logout',\r\n      REGISTER: '/auth/register',\r\n      PROFILE: '/users/profile',\r\n      UPDATE_PROFILE: '/users/profile',\r\n      CHANGE_PASSWORD: '/users/password',\r\n      FAVORITES: '/users/favorites',\r\n      UPLOADS: '/users/uploads',\r\n      STATISTICS: '/users/statistics'\r\n    },\r\n    \r\n    // 鸟类相关\r\n    BIRD: {\r\n      LIST: '/birds',\r\n      DETAIL: '/birds/{id}',\r\n      SEARCH: '/birds/search',\r\n      CATEGORIES: '/birds/categories',\r\n      ENCYCLOPEDIA: '/birds/encyclopedia',\r\n      IDENTIFY: '/birds/identify',\r\n      NEARBY: '/birds/nearby',\r\n      STATISTICS: '/birds/statistics',\r\n      LIKE: '/birds/{id}/like',\r\n      UNLIKE: '/birds/{id}/unlike'\r\n    },\r\n    \r\n    // 海报相关\r\n    POSTER: {\r\n      LIST: '/posters',\r\n      DETAIL: '/posters/{id}',\r\n      SEARCH: '/posters/search',\r\n      UPLOAD: '/posters/upload',\r\n      UPDATE: '/posters/{id}',\r\n      DELETE: '/posters/{id}',\r\n      LIKE: '/posters/{id}/like',\r\n      COMMENTS: '/posters/{id}/comments'\r\n    },\r\n    \r\n    // 排行榜\r\n    RANKING: {\r\n      VIEWS: '/ranking/views',\r\n      LIKES: '/ranking/likes',\r\n      UPLOADS: '/ranking/uploads',\r\n      USERS: '/ranking/users'\r\n    },\r\n    \r\n    // 文件上传\r\n    UPLOAD: {\r\n      IMAGE: '/upload/image',\r\n      AUDIO: '/upload/audio',\r\n      VIDEO: '/upload/video',\r\n      AVATAR: '/upload/avatar'\r\n    },\r\n    \r\n    // 系统相关\r\n    SYSTEM: {\r\n      CONFIG: '/system/config',\r\n      VERSION: '/system/version',\r\n      ANNOUNCEMENTS: '/system/announcements',\r\n      FEEDBACK: '/system/feedback'\r\n    }\r\n  };\r\n  \r\n  // 请求方法常量\r\n  export const HTTP_METHODS = {\r\n    GET: 'GET',\r\n    POST: 'POST',\r\n    PUT: 'PUT',\r\n    DELETE: 'DELETE',\r\n    PATCH: 'PATCH'\r\n  };\r\n  \r\n  // 内容类型常量\r\n  export const CONTENT_TYPES = {\r\n    JSON: 'application/json',\r\n    FORM_DATA: 'multipart/form-data',\r\n    URL_ENCODED: 'application/x-www-form-urlencoded',\r\n    OCTET_STREAM: 'application/octet-stream'\r\n  };\r\n  \r\n  // 缓存键前缀\r\n  export const CACHE_KEYS = {\r\n    USER_INFO: 'user_info_',\r\n    BIRD_LIST: 'bird_list_',\r\n    BIRD_DETAIL: 'bird_detail_',\r\n    POSTER_LIST: 'poster_list_',\r\n    CATEGORIES: 'categories_',\r\n    RANKING: 'ranking_',\r\n    SEARCH_HISTORY: 'search_history',\r\n    UPLOAD_QUEUE: 'upload_queue'\r\n  };\r\n  \r\n  // 本地存储键\r\n  export const STORAGE_KEYS = {\r\n    TOKEN: 'access_token',\r\n    REFRESH_TOKEN: 'refresh_token',\r\n    USER_INFO: 'user_info',\r\n    SETTINGS: 'app_settings',\r\n    SEARCH_HISTORY: 'search_history',\r\n    FAVORITE_BIRDS: 'favorite_birds',\r\n    UPLOAD_DRAFTS: 'upload_drafts',\r\n    CHAT_HISTORY: 'chat_history'\r\n  };\r\n  \r\n  // 事件名称常量\r\n  export const EVENT_NAMES = {\r\n    LOGIN_SUCCESS: 'loginSuccess',\r\n    LOGOUT: 'logout',\r\n    TOKEN_EXPIRED: 'tokenExpired',\r\n    NETWORK_ERROR: 'networkError',\r\n    UPLOAD_PROGRESS: 'uploadProgress',\r\n    UPLOAD_SUCCESS: 'uploadSuccess',\r\n    UPLOAD_FAILED: 'uploadFailed',\r\n    CHAT_MESSAGE: 'chatMessage',\r\n    BIRD_IDENTIFIED: 'birdIdentified'\r\n  };\r\n  \r\n  // 权限配置\r\n  export const PERMISSIONS = {\r\n    // 读取权限\r\n    READ: {\r\n      BIRDS: 'read:birds',\r\n      POSTERS: 'read:posters',\r\n      USERS: 'read:users',\r\n      COMMENTS: 'read:comments'\r\n    },\r\n    // 写入权限\r\n    WRITE: {\r\n      POSTERS: 'write:posters',\r\n      COMMENTS: 'write:comments',\r\n      LIKES: 'write:likes',\r\n      UPLOADS: 'write:uploads'\r\n    },\r\n    // 管理权限\r\n    ADMIN: {\r\n      USERS: 'admin:users',\r\n      CONTENT: 'admin:content',\r\n      SYSTEM: 'admin:system'\r\n    }\r\n  };\r\n  \r\n  // 获取完整的API URL\r\n  export function getApiUrl(endpoint, params = {}) {\r\n    let url = API_CONFIG.BASE_URL + endpoint;\r\n    \r\n    // 替换路径参数\r\n    Object.keys(params).forEach(key => {\r\n      url = url.replace(`{${key}}`, params[key]);\r\n    });\r\n    \r\n    return url;\r\n  }\r\n  \r\n  // 获取上传URL\r\n  export function getUploadUrl(type = 'image') {\r\n    const uploadEndpoints = {\r\n      image: API_ENDPOINTS.UPLOAD.IMAGE,\r\n      audio: API_ENDPOINTS.UPLOAD.AUDIO,\r\n      video: API_ENDPOINTS.UPLOAD.VIDEO,\r\n      avatar: API_ENDPOINTS.UPLOAD.AVATAR\r\n    };\r\n    \r\n    return getApiUrl(uploadEndpoints[type] || uploadEndpoints.image);\r\n  }\r\n  \r\n  // 检查文件类型是否支持\r\n  export function isSupportedFileType(filename, type = 'image') {\r\n    const extension = filename.toLowerCase().split('.').pop();\r\n    \r\n    const typeMap = {\r\n      image: API_CONFIG.UPLOAD.ALLOWED_IMAGE_TYPES,\r\n      audio: API_CONFIG.UPLOAD.ALLOWED_AUDIO_TYPES,\r\n      video: API_CONFIG.UPLOAD.ALLOWED_VIDEO_TYPES\r\n    };\r\n    \r\n    return typeMap[type]?.includes(extension) || false;\r\n  }\r\n  \r\n  // 检查文件大小是否符合要求\r\n  export function isValidFileSize(fileSize) {\r\n    const maxSize = API_CONFIG.UPLOAD.MAX_FILE_SIZE * 1024 * 1024; // 转换为字节\r\n    return fileSize <= maxSize;\r\n  }\r\n  \r\n  // 生成缓存键\r\n  export function generateCacheKey(prefix, ...params) {\r\n    return API_CONFIG.CACHE.PREFIX + prefix + params.join('_');\r\n  }\r\n  \r\n  // 获取错误信息\r\n  export function getErrorMessage(statusCode, defaultMessage = ERROR_MESSAGES.UNKNOWN_ERROR) {\r\n    return ERROR_MESSAGES[statusCode] || defaultMessage;\r\n  }\r\n  \r\n  // 导出默认配置\r\n  export default API_CONFIG;"],"names":[],"mappings":"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"}